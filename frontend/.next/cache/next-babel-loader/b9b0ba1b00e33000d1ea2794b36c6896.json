{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/form/SingleMediaForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n  height: \"190px\"\n};\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\"\n};\n\nconst SingleMediaForm = ({\n  fieldTitle,\n  files,\n  setFiles,\n  preview\n}) => {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h_dynamic_media_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"field_title\",\n      children: fieldTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      style: {\n        width: \"100%\",\n        height: \"200px\",\n        border: \"1px solid grey\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        cursor: \"pointer\",\n        overflow: \"hidden\"\n      }\n    }, getRootProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), preview ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: files.length > 0 && thumbs\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: files.length ? thumbs : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD30C\\uC77C\\uC744 \\uC62C\\uB824\\uB193\\uAC70\\uB098 \\uD074\\uB9AD\\uD574 \\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }, this)\n      }, void 0, false), preview && files.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: thumbInner,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            style: img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, 11, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SingleMediaForm;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/form/SingleMediaForm.tsx"],"names":["React","useCallback","useDropzone","thumbInner","display","minWidth","overflow","height","img","width","SingleMediaForm","fieldTitle","files","setFiles","preview","onDrop","acceptedFiles","map","file","Object","assign","URL","createObjectURL","thumbs","justifyContent","alignItems","name","getRootProps","getInputProps","border","background","cursor","length"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n  height: \"190px\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst SingleMediaForm = ({ fieldTitle, files, setFiles, preview }: any) => {\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    setFiles(\n      acceptedFiles.map((file: any) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      )\n    );\n  }, []);\n\n  const thumbs = files.map((file: any) => (\n    <div\n      key={file.name}\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} />\n      </div>\n    </div>\n  ));\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div className=\"h_dynamic_media_form\">\n      <h3 className=\"field_title\">{fieldTitle}</h3>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"200px\",\n          border: \"1px solid grey\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          background: \"#fff\",\n          cursor: \"pointer\",\n          overflow: \"hidden\",\n        }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n\n        {preview ? (\n          <>{files.length > 0 && thumbs}</>\n        ) : (\n          <>{files.length ? thumbs : <p>파일을 올려놓거나 클릭해 주세요.</p>}</>\n        )}\n\n        {preview && files.length === 0 && (\n          <div\n            key={11}\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={thumbInner}>\n              <img src={preview} style={img} />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleMediaForm;\n"]},"metadata":{},"sourceType":"module"}