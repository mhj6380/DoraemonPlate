{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nconst BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"sc-1x045vr-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\nconst SubmitBtn = styled.button.withConfig({\n  displayName: \"write__SubmitBtn\",\n  componentId: \"sc-1x045vr-1\"\n})([\"box-shadow:none;font-size:16px;padding:10px 30px;border-radius 5px;background:#1a1a1a;color:#fff;\"]);\n\nconst BoardWritePage = ({}) => {\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  //   const editorToHtml = draftToHtml(\n  //     convertToRaw(editorState.getCurrentContent())\n  //   );\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: values => {\n            const errors = {};\n\n            if (values.title === '') {\n              errors.text = '제목을 입력해주세요.';\n            }\n\n            return errors;\n          },\n          onSubmit: (data, {\n            setSubmitting\n          }) => {\n            setSubmitting(true);\n            setLoading(true);\n            console.log(data);\n            axios.post(`${BACKEND_URL}/board`).then(res => {\n              console.log(res.data);\n            });\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n              type: \"submit\",\n              children: \"\\uC791\\uC131\\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardWritePage;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx"],"names":["useState","styled","TransitionLayout","EditorField","BasicTextField","EditorState","Formik","Form","axios","BACKEND_URL","BoardWriteWrapper","div","SubmitBtn","button","BoardWritePage","editorState","setEditorState","createEmpty","loading","setLoading","title","content","tags","tag_name","values","errors","text","data","setSubmitting","console","log","post","then","res","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,SAASC,WAAT,QAA0C,UAA1C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,MAAMC,iBAAiB,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,+DAAvB;AAOA,MAAMC,SAAS,GAAGX,MAAM,CAACY,MAAV;AAAA;AAAA;AAAA,yGAAf;;AAWA,MAAMC,cAAc,GAAG,CAAC,EAAD,KAA4B;AACjD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgChB,QAAQ,CAACK,WAAW,CAACY,WAAZ,EAAD,CAA9C;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC,CAFiD,CAIjD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,QAAC,gBAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AACboB,YAAAA,KAAK,EAAE,EADM;AAEbC,YAAAA,OAAO,EAAE,EAFI;AAGbC,YAAAA,IAAI,EAAE,CACJ;AACEC,cAAAA,QAAQ,EAAE;AADZ,aADI;AAHO,WADjB;AAUE,UAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,kBAAMC,MAA8B,GAAG,EAAvC;;AAEA,gBAAID,MAAM,CAACJ,KAAP,KAAiB,EAArB,EAAyB;AACvBK,cAAAA,MAAM,CAACC,IAAP,GAAc,aAAd;AACD;;AAED,mBAAOD,MAAP;AACD,WAlBH;AAmBE,UAAA,QAAQ,EAAE,CAACE,IAAD,EAAO;AAAEC,YAAAA;AAAF,WAAP,KAA6B;AACrCA,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAT,YAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAnB,YAAAA,KAAK,CAACuB,IAAN,CAAY,GAAEtB,WAAY,QAA1B,EAAmCuB,IAAnC,CAAyCC,GAAD,IAAc;AACpDJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACN,IAAhB;AACD,aAFD;AAIAC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WA5BH;AAAA,iCA8BE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEM,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA,oCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAa,cAAA,GAAG,EAAEnB,WAAlB;AAA+B,cAAA,MAAM,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAWE,QAAC,SAAD;AAAW,cAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BF;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAlED;;AAoEA,eAAeF,cAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst SubmitBtn = styled.button`\n  box-shadow:none;\n  font-size:16px;\n  padding:10px 30px;\n  border-radius 5px;\n  background: #1a1a1a;\n  color: #fff;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  //   const editorToHtml = draftToHtml(\n  //     convertToRaw(editorState.getCurrentContent())\n  //   );\n\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                errors.text = '제목을 입력해주세요.';\n              }\n\n              return errors;\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n              setLoading(true);\n              console.log(data);\n              axios.post(`${BACKEND_URL}/board`).then((res: any) => {\n                console.log(res.data);\n              });\n\n              setSubmitting(false);\n            }}\n          >\n            <Form style={{ width: '100%' }}>\n              <BasicTextField name=\"text\" />\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n              <SubmitBtn type=\"submit\">작성완료</SubmitBtn>\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}