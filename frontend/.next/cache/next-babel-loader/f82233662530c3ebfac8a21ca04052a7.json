{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/auth/register.tsx\";\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { TextField } from \"@material-ui/core\";\nimport { Title, ViewWrapper, LoginFormWrapper, NoAccount, CheckboxWrapper, FieldWrapper, SubmitBtn, ValidationAlert } from './styled';\nimport axios from \"../../util/axios\"; // import { useRouter } from 'next/router';\n\nconst RegisterForm = () => {\n  // const Router = useRouter();\n  const [email, setEmail] = React.useState(\"hakgu@gmail.com\");\n  const [nickname, setNickname] = React.useState(\"hakgu\");\n  const [password, setPassword] = React.useState(\"roahdla99!\");\n  const [passwordConfirm, setPasswordConfirm] = React.useState(\"roahdla99!\");\n  const [agree, setAgree] = React.useState(false); // const [cookies, setCookie] = useCookies([\"accessToken\"]);\n  // ValidationForm\n\n  const {\n    0: valiEmail,\n    1: setValiEmail\n  } = useState(\"\");\n  const {\n    0: valiPwd,\n    1: setValiPwd\n  } = useState(\"\");\n  const {\n    0: valiPwdConfirm,\n    1: setValiPwdConfirm\n  } = useState(\"\");\n  const {\n    0: valiNickname,\n    1: setValiNickname\n  } = useState(\"\");\n\n  const handleOnSubmit = async e => {\n    e.preventDefault(); // alert(\"TQ\");\n    // return;\n\n    if (!validationEmail(email, true)) {\n      return false;\n    }\n\n    if (!validationPasswd(password, true)) {\n      return false;\n    }\n\n    if (!email) setValiEmail(\"이메일을 입력해주세요.\");\n    if (!nickname) setValiNickname(\"닉네임을 입력해주세요.\");\n    if (!password) setValiPwd(\"비밀번호를 입력해주세요.\");\n    if (!passwordConfirm) setValiPwdConfirm(\"비밀번호 확인을 입력해주세요.\");\n\n    if (!email || !password || !passwordConfirm || !nickname) {\n      alert(\"정보를 모두 입력해주세요\");\n      return;\n    }\n\n    if (!validationPasswdConfirm(passwordConfirm, true)) {\n      return false;\n    } // if (password !== passwordConfirm) {\n    //   alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n    //   setPassword(\"\");\n    //   setPasswordConfirm(\"\");\n    //   return;\n    // }\n\n\n    try {\n      const token = await axios.post(\"/auth/register\", {\n        user_id: email,\n        password,\n        nickname\n      });\n      console.log(token); // if (token.status === 200) {\n      //   setCookie(\"accessToken\", token.data.accessToken, {\n      //     path: \"/\",\n      //     maxAge: 100000,\n      //   });\n      //   setCookie(\"refreshToken\", token.data.refreshToken, {\n      //     path: \"/\",\n      //     maxAge: 700000,\n      //   }); \n      //   console.log(cookies); \n      //   alert(token.data.message); \n      //   window.location.href = \"/\"; \n      //   return;\n      // } else {\n      //   alert(token.data.message);\n      //   return; \n      // }\n    } catch (err) {\n      alert(err);\n      setEmail(\"\");\n      setPassword(\"\");\n      setPasswordConfirm(\"\");\n      return;\n    }\n  }; // 이메일 정규표현식 체크\n\n\n  const validationEmail = (email, submit) => {\n    // var email = e.target.value;\n    setEmail(email);\n    var exptext = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/;\n\n    if (exptext.test(email) === false) {\n      if (email === \"\") {\n        //이메일 형식이 알파벳+숫자@알파벳+숫자.알파벳+숫자 형식이 아닐경우\n        if (submit) {\n          setValiEmail(\"이메일은 필수 입력 항목입니다.\");\n        }\n      } else {\n        if (submit) {\n          setValiEmail(\"이메일 형식이 올바르지 않습니다.\");\n        }\n      }\n\n      return false;\n    }\n\n    setValiEmail(\"\");\n    return true;\n  };\n\n  const validationPasswd = (pw, submit) => {\n    setPassword(pw);\n    var num = pw.search(/[0-9]/g);\n    var eng = pw.search(/[a-z]/gi);\n\n    if (pw.length < 8 || pw.length > 20) {\n      if (submit) {\n        setValiPwd(\"8자리 ~ 20자리 이내로 입력해주세요.\");\n      }\n\n      return false;\n    } else if (pw.search(/\\s/) !== -1) {\n      if (submit) {\n        setValiPwd(\"비밀번호는 공백 없이 입력해주세요.\");\n      }\n\n      return false;\n    } else if (num < 0 || eng < 0) {\n      if (submit) {\n        setValiPwd(\"영문,숫자를 혼합하여 입력해주세요.\");\n      }\n\n      return false;\n    } else {\n      setValiPwd(\"\");\n      return true;\n    }\n  };\n\n  const validationPasswdConfirm = (pwConfirm, submit) => {\n    setPasswordConfirm(pwConfirm);\n\n    if (password !== pwConfirm) {\n      if (submit) {\n        setValiPwdConfirm(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n      }\n\n      return false;\n    } else {\n      setValiPwdConfirm(\"\");\n      return true;\n    }\n  }; // 이미 로그인중이라면 메인으로 \n  // if (me) Router.push('/'); \n\n\n  return /*#__PURE__*/_jsxDEV(ViewWrapper, {\n    children: /*#__PURE__*/_jsxDEV(LoginFormWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginTextField, {\n        label: \"\\uC774\\uBA54\\uC77C\",\n        type: \"text\",\n        val: email,\n        setVal: setEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationAlert, {\n        children: valiEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginTextField, {\n        label: \"\\uB2C9\\uB124\\uC784\",\n        type: \"text\",\n        val: nickname,\n        setVal: setNickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationAlert, {\n        children: valiNickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginTextField, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        type: \"password\",\n        val: password,\n        setVal: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationAlert, {\n        children: valiPwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginTextField, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        type: \"password\",\n        val: passwordConfirm,\n        setVal: setPasswordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationAlert, {\n        children: valiPwdConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckboxWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"longsession\",\n          children: [\"\\uAC1C\\uC778\\uC815\\uBCF4 \\uCC98\\uB9AC\\uBC29\\uCE68 \\uB3D9\\uC758 (\\uD544\\uC218)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"longsession\",\n            type: \"checkbox\",\n            onChange: () => {\n              setAgree(!agree);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: \"/agree\",\n          children: \"\\uB0B4\\uC6A9\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"longsession\",\n          children: [\"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC57D\\uAD00 \\uB3D9\\uC758 (\\uD544\\uC218)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"longsession\",\n            type: \"checkbox\",\n            onChange: () => {\n              setAgree(!agree);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: \"/agree\",\n          children: \"\\uB0B4\\uC6A9\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n        onClick: handleOnSubmit,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoAccount, {\n        children: [\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/auth/login\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\nconst LoginTextField = props => {\n  const {\n    label,\n    type,\n    val,\n    setVal\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FieldWrapper, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      label: label,\n      fullWidth: true,\n      value: val,\n      type: type,\n      onChange: e => {\n        setVal(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/auth/register.tsx"],"names":["React","useState","Link","TextField","Title","ViewWrapper","LoginFormWrapper","NoAccount","CheckboxWrapper","FieldWrapper","SubmitBtn","ValidationAlert","axios","RegisterForm","email","setEmail","nickname","setNickname","password","setPassword","passwordConfirm","setPasswordConfirm","agree","setAgree","valiEmail","setValiEmail","valiPwd","setValiPwd","valiPwdConfirm","setValiPwdConfirm","valiNickname","setValiNickname","handleOnSubmit","e","preventDefault","validationEmail","validationPasswd","alert","validationPasswdConfirm","token","post","user_id","console","log","err","submit","exptext","test","pw","num","search","eng","length","pwConfirm","LoginTextField","props","label","type","val","setVal","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { TextField } from \"@material-ui/core\";\nimport { Title,ViewWrapper,LoginFormWrapper,NoAccount,CheckboxWrapper,FieldWrapper,SubmitBtn,ValidationAlert } from './styled';\nimport axios from \"../../util/axios\"; \n// import { useRouter } from 'next/router';\n\nconst RegisterForm = () => { \n  // const Router = useRouter();\n  const [email, setEmail] = React.useState(\"hakgu@gmail.com\"); \n  const [nickname, setNickname] = React.useState(\"hakgu\");\n  const [password, setPassword] = React.useState(\"roahdla99!\");\n  const [passwordConfirm, setPasswordConfirm] = React.useState(\"roahdla99!\");\n  const [agree, setAgree] = React.useState(false);\n  // const [cookies, setCookie] = useCookies([\"accessToken\"]);\n \n  // ValidationForm\n  const [valiEmail, setValiEmail] = useState(\"\");\n  const [valiPwd, setValiPwd] = useState(\"\");\n  const [valiPwdConfirm, setValiPwdConfirm] = useState(\"\");\n  const [valiNickname, setValiNickname] = useState(\"\");\n  \n\n  const handleOnSubmit = async (e:any) => {\n    e.preventDefault();\n    // alert(\"TQ\");\n    // return;\n\n    if(!validationEmail(email, true)){ \n      return false;\n    }\n\n    if (!validationPasswd(password, true)) {\n      return false;\n    }\n\n\n    if (!email) setValiEmail(\"이메일을 입력해주세요.\"); \n    if (!nickname) setValiNickname(\"닉네임을 입력해주세요.\"); \n    if (!password) setValiPwd(\"비밀번호를 입력해주세요.\");  \n    if (!passwordConfirm) setValiPwdConfirm(\"비밀번호 확인을 입력해주세요.\");  \n    \n  \n    if (!email || !password || !passwordConfirm || !nickname) {\n      alert(\"정보를 모두 입력해주세요\");\n      return;\n    }\n\n\n    if (!validationPasswdConfirm(passwordConfirm, true)) {\n      return false;\n    }\n\n    // if (password !== passwordConfirm) {\n    //   alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n    //   setPassword(\"\");\n    //   setPasswordConfirm(\"\");\n    //   return;\n    // }\n\n\n    try {\n      const token:any = await axios  \n        .post(\"/auth/register\", { \n          user_id: email,\n          password,\n          nickname \n        }) \n     \n      console.log(token);\n      // if (token.status === 200) {\n      //   setCookie(\"accessToken\", token.data.accessToken, {\n      //     path: \"/\",\n      //     maxAge: 100000,\n      //   });\n      //   setCookie(\"refreshToken\", token.data.refreshToken, {\n      //     path: \"/\",\n      //     maxAge: 700000,\n      //   }); \n      //   console.log(cookies); \n      //   alert(token.data.message); \n      //   window.location.href = \"/\"; \n      //   return;\n      // } else {\n      //   alert(token.data.message);\n      //   return; \n      // }\n    } catch (err) {\n      alert(err);\n      setEmail(\"\");\n      setPassword(\"\");\n      setPasswordConfirm(\"\");\n      return;\n    }\n  };\n\n\n  // 이메일 정규표현식 체크\n  const validationEmail = (email, submit) => {\n    // var email = e.target.value;\n    setEmail(email);\n    var exptext = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/;\n    if (exptext.test(email) === false) {\n      if (email === \"\") {\n        //이메일 형식이 알파벳+숫자@알파벳+숫자.알파벳+숫자 형식이 아닐경우\n        if (submit) {\n          setValiEmail(\"이메일은 필수 입력 항목입니다.\");\n        }\n      } else {\n        if (submit) {\n          setValiEmail(\"이메일 형식이 올바르지 않습니다.\");\n        }\n      } \n      return false;\n    }\n    setValiEmail(\"\");\n    return true;\n  };\n\n  const validationPasswd = (pw, submit) => {\n    setPassword(pw);\n    var num = pw.search(/[0-9]/g);\n    var eng = pw.search(/[a-z]/gi);\n\n    if (pw.length < 8 || pw.length > 20) {\n      if (submit) {\n        setValiPwd(\"8자리 ~ 20자리 이내로 입력해주세요.\");\n      } \n      return false;\n    } else if (pw.search(/\\s/) !== -1) {\n      if (submit) {\n        setValiPwd(\"비밀번호는 공백 없이 입력해주세요.\");\n      } \n      return false;\n    } else if (num < 0 || eng < 0) {\n      if (submit) {\n        setValiPwd(\"영문,숫자를 혼합하여 입력해주세요.\");\n      }\n      return false;\n    } else {\n      setValiPwd(\"\");\n      return true; \n    }\n  };\n\n  const validationPasswdConfirm = (pwConfirm, submit) => {\n    setPasswordConfirm(pwConfirm);\n    if (password !== pwConfirm) {\n      if (submit) {\n        setValiPwdConfirm(\"비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\n      } \n      return false;\n    } else {\n      setValiPwdConfirm(\"\");\n      return true;\n    }\n  };\n\n  // 이미 로그인중이라면 메인으로 \n  // if (me) Router.push('/'); \n\n  return (\n    <ViewWrapper>\n      <LoginFormWrapper>\n        <Title>Sign up</Title>\n        <LoginTextField\n          label=\"이메일\"\n          type=\"text\"\n          val={email}\n          setVal={setEmail}\n        />\n        <ValidationAlert>{valiEmail}</ValidationAlert>\n        <LoginTextField\n          label=\"닉네임\"\n          type=\"text\"\n          val={nickname}\n          setVal={setNickname}\n        />\n        <ValidationAlert>{valiNickname}</ValidationAlert>\n\n        <LoginTextField\n          label=\"비밀번호\"\n          type=\"password\"\n          val={password}\n          setVal={setPassword}\n        />\n        <ValidationAlert>{valiPwd}</ValidationAlert>\n        <LoginTextField\n          label=\"비밀번호 확인\"\n          type=\"password\"\n          val={passwordConfirm}\n          setVal={setPasswordConfirm}\n        /> \n        <ValidationAlert>{valiPwdConfirm}</ValidationAlert>\n        <CheckboxWrapper>\n          <label htmlFor=\"longsession\">\n            개인정보 처리방침 동의 (필수)\n            <input \n              id=\"longsession\"\n              type=\"checkbox\"\n              onChange={() => {\n                setAgree(!agree);\n              }}\n            />\n          </label>\n          &nbsp;&nbsp;\n          <a target=\"_blank\" href=\"/agree\">\n            내용보기\n          </a>\n          <br />\n          <br />\n          <label htmlFor=\"longsession\">\n            서비스 이용약관 동의 (필수)\n            <input\n              id=\"longsession\"\n              type=\"checkbox\"\n              onChange={() => {\n                setAgree(!agree);\n              }}\n            />\n          </label>\n          &nbsp;&nbsp;\n          <a target=\"_blank\" href=\"/agree\">\n            내용보기\n          </a>\n        </CheckboxWrapper>\n        \n        <SubmitBtn onClick={handleOnSubmit}>회원가입</SubmitBtn>\n        <NoAccount>\n          이미 계정이 있으신가요? <Link href=\"/auth/login\">로그인</Link>\n        </NoAccount>\n      </LoginFormWrapper>\n    </ViewWrapper>\n  );\n};\n\n\n\nconst LoginTextField = (props) => {\n  const { label, type, val, setVal } = props;\n  return (\n    <FieldWrapper>\n      <TextField\n        label={label}\n        fullWidth\n        value={val}\n        type={type}\n        onChange={(e) => {\n          setVal(e.target.value);\n        }}\n      />\n    </FieldWrapper>\n  );\n};\n\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}