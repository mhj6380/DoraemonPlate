{"ast":null,"code":"import _regeneratorRuntime from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\nimport { useAuthState } from 'lib/providers/authProvider';\nimport { useRouter } from 'next/router';\nimport { base64ImageUpload } from 'globalFunction';\nimport dynamic from 'next/dynamic';\nvar QuillEditor = dynamic(_c = function _c() {\n  return import('components/form/QuilEditor');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/form/QuilEditor')];\n    },\n    modules: ['components/form/QuilEditor']\n  }\n});\n_c2 = QuillEditor;\nvar BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"iq95sf-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;.ql-picker-options{span[data-value='8pt']{font-size:40px;}}.ql-editor{min-height:200px !important;}#tab-panel{width:200px;height:160px;overflow-y:scroll;background:#ededed;position:absolute;top:0;right:0;text-align:center;padding:5px;border:1px solid lightgrey;span{font-size:23px;cursor:pointer;}}\"]);\n_c3 = BoardWriteWrapper;\n\nvar BoardWritePage = function BoardWritePage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var me = useAuthState();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var Router = useRouter();\n\n  var _useState2 = useState(''),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var contentTemp = '';\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: ''\n          },\n          validate: /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n              var errors;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      errors = {};\n\n                      if (values.title === '') {\n                        errors.title = '제목을 입력해주세요.';\n                      } // if (values.content === '') {\n                      //   errors.content = '내용을 입력해주세요.';\n                      // }\n\n\n                      return _context.abrupt(\"return\", errors);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          onSubmit: /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, _ref3) {\n              var setSubmitting, images, i, original, generate, base64ImageUrl, uploadedImgURL, changeContent;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      setSubmitting = _ref3.setSubmitting;\n                      setSubmitting(true);\n                      setLoading(true); // base64 형태로 되어있는 content state의 <img /> 들을 일괄적으로 업로드 해주고, 업로드된 이미지 URL로 치환해준다\n\n                      contentTemp = content;\n                      images = contentTemp.match(/<img[^>]*src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>/g);\n\n                      if (!images) {\n                        _context2.next = 20;\n                        break;\n                      }\n\n                      if (!(images.length > 0)) {\n                        _context2.next = 20;\n                        break;\n                      }\n\n                      i = 0;\n\n                    case 8:\n                      if (!(i < images.length)) {\n                        _context2.next = 20;\n                        break;\n                      }\n\n                      original = images[i];\n                      generate = original.replace('<img src=\"', '');\n                      base64ImageUrl = generate.replace('\">', ''); // console.log('GEN', base64ImageUrl);\n\n                      _context2.next = 14;\n                      return base64ImageUpload(base64ImageUrl);\n\n                    case 14:\n                      uploadedImgURL = _context2.sent;\n                      changeContent = contentTemp.replace(base64ImageUrl, uploadedImgURL.toString());\n                      contentTemp = changeContent;\n\n                    case 17:\n                      i++;\n                      _context2.next = 8;\n                      break;\n\n                    case 20:\n                      // 게시물 업로드\n                      axios.post(\"\".concat(BACKEND_URL, \"/board\"), {\n                        title: data.title,\n                        content: contentTemp,\n                        author: me.userInfo.user_id,\n                        thumbnail: '',\n                        tags: '',\n                        topic: 'default'\n                      }).then(function (res) {\n                        Router.push(\"/board/\".concat(res.data.id));\n                      });\n                      setSubmitting(false);\n\n                    case 22:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2, _x3) {\n              return _ref4.apply(this, arguments);\n            };\n          }(),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(QuillEditor, {\n              val: content,\n              setVal: setContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(BasicSubmitBtn, {\n              text: \"\\uC791\\uC131\\uC644\\uB8CC\",\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoardWritePage, \"Rlcxko6WG9c35w3Veqqve/vFC6U=\", false, function () {\n  return [useAuthState, useRouter];\n});\n\n_c4 = BoardWritePage;\nexport default BoardWritePage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuillEditor$dynamic\");\n$RefreshReg$(_c2, \"QuillEditor\");\n$RefreshReg$(_c3, \"BoardWriteWrapper\");\n$RefreshReg$(_c4, \"BoardWritePage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write.tsx"],"names":["useState","styled","TransitionLayout","BasicTextField","Formik","Form","axios","BACKEND_URL","BasicSubmitBtn","useAuthState","useRouter","base64ImageUpload","dynamic","QuillEditor","ssr","BoardWriteWrapper","div","BoardWritePage","me","loading","setLoading","Router","content","setContent","contentTemp","title","values","errors","data","setSubmitting","images","match","length","i","original","generate","replace","base64ImageUrl","uploadedImgURL","changeContent","toString","post","author","userInfo","user_id","thumbnail","tags","topic","then","res","push","id","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\nimport { useAuthState } from 'lib/providers/authProvider';\nimport { useRouter } from 'next/router';\nimport { base64ImageUpload } from 'globalFunction';\nimport dynamic from 'next/dynamic';\n\nconst QuillEditor = dynamic(() => import('components/form/QuilEditor'), {\n  ssr: false,\n});\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n\n  .ql-picker-options {\n    span[data-value='8pt'] {\n      font-size: 40px;\n    }\n  }\n  .ql-editor {\n    min-height: 200px !important;\n  }\n\n  #tab-panel {\n    width: 200px;\n    height: 160px;\n    overflow-y: scroll;\n    background: #ededed;\n    position: absolute;\n    top: 0;\n    right: 0;\n    text-align: center;\n    padding: 5px;\n    border: 1px solid lightgrey;\n    span {\n      font-size: 23px;\n      cursor: pointer;\n    }\n  }\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const me = useAuthState();\n\n  const [loading, setLoading] = useState(false);\n  const Router = useRouter();\n  const [content, setContent] = useState('');\n\n  let contentTemp = '';\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n            }}\n            validate={async (values) => {\n              const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                errors.title = '제목을 입력해주세요.';\n              }\n\n              // if (values.content === '') {\n              //   errors.content = '내용을 입력해주세요.';\n              // }\n\n              return errors;\n            }}\n            onSubmit={async (data, { setSubmitting }) => {\n              setSubmitting(true);\n              setLoading(true);\n\n              // base64 형태로 되어있는 content state의 <img /> 들을 일괄적으로 업로드 해주고, 업로드된 이미지 URL로 치환해준다\n              contentTemp = content;\n              const images = contentTemp.match(\n                /<img[^>]*src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>/g\n              );\n              if (images) {\n                if (images.length > 0) {\n                  for (var i = 0; i < images.length; i++) {\n                    const original = images[i];\n                    let generate = original.replace('<img src=\"', '');\n                    let base64ImageUrl = generate.replace('\">', '');\n                    // console.log('GEN', base64ImageUrl);\n                    const uploadedImgURL = await base64ImageUpload(\n                      base64ImageUrl\n                    );\n\n                    const changeContent = contentTemp.replace(\n                      base64ImageUrl,\n                      uploadedImgURL.toString()\n                    );\n                    contentTemp = changeContent;\n                  }\n                }\n              }\n\n              // 게시물 업로드\n              axios\n                .post(`${BACKEND_URL}/board`, {\n                  title: data.title,\n                  content: contentTemp,\n                  author: me.userInfo.user_id,\n                  thumbnail: '',\n                  tags: '',\n                  topic: 'default',\n                })\n                .then((res: any) => {\n                  Router.push(`/board/${res.data.id}`);\n                });\n\n              setSubmitting(false);\n            }}\n          >\n            <Form style={{ width: '100%' }}>\n              <BasicTextField name=\"title\" />\n              <QuillEditor val={content} setVal={setContent} />\n              {/* 수정모드일때만  */}\n              <BasicSubmitBtn text=\"작성완료\" loading={loading} />\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}