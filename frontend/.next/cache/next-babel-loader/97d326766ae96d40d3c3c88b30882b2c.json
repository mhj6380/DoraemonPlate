{"ast":null,"code":"import _defineProperty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\";\nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm';\nimport { useChatState } from 'lib/providers/chatProvider';\nimport { useAuthState } from 'lib/providers/authProvider';\nimport dayjs from 'dayjs';\nimport useSWR, { mutate } from 'swr';\nimport { BACKEND_URL } from 'config';\nimport axios from 'axios';\nvar DirectMessageWrapper = styled.div.withConfig({\n  displayName: \"partner_id__DirectMessageWrapper\",\n  componentId: \"sc-4pw1eg-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = DirectMessageWrapper;\n\nvar DirectMessage = function DirectMessage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var partner_id = router.query.partner_id;\n  var dispatch = useChatDispatch();\n  var chat = useChatState();\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var me = useAuthState();\n  var usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  var room_key = \"\".concat(usersArr[0], \":\").concat(usersArr[1]);\n\n  var fetcher = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(url);\n\n            case 2:\n              resp = _context.sent;\n              return _context.abrupt(\"return\", resp.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetcher(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useSWR = useSWR(\"\".concat(BACKEND_URL, \"/chat/message/\").concat(room_key), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var test = function test() {\n    console.log(\"DT\");\n    console.log(data);\n    mutate(\"\".concat(BACKEND_URL, \"/chat/message/\").concat(room_key), _objectSpread(_objectSpread({}, data), {}, {\n      test: 'hakgu'\n    }));\n  };\n\n  useEffect(function () {\n    if (!partner_id) return;\n    dispatch({\n      type: \"JOIN_ROOM\",\n      payload: room_key\n    });\n  }, []);\n\n  var handleSendMessage = function handleSendMessage(e) {\n    e.preventDefault();\n    var _me$userInfo = me.userInfo,\n        nickname = _me$userInfo.nickname,\n        profile = _me$userInfo.profile,\n        user_id = _me$userInfo.user_id;\n    var payload = {\n      room_key: room_key,\n      nickname: nickname,\n      profile: profile,\n      insert_datetime: dayjs().format('YYYY-MM-DD HH:mm:ss'),\n      message: message,\n      source: '',\n      message_type: 'text',\n      from_user: user_id,\n      to_user: partner_id.toString()\n    };\n    dispatch({\n      type: \"SEND_MESSAGE\",\n      payload: payload\n    });\n    setMessage('');\n  };\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(DirectMessageWrapper, {\n      children: [JSON.stringify(data), \"partner_id : \", partner_id, JSON.stringify(me.userInfo.user_id), /*#__PURE__*/_jsxDEV(ChatList, {\n        datas: chat.chatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: test,\n        children: \"MUTATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DirectMessage, \"WMgE3P/OEYSHAfrjsuRneKXWKUQ=\", false, function () {\n  return [useRouter, useChatDispatch, useChatState, useAuthState, useSWR];\n});\n\n_c2 = DirectMessage;\nexport default DirectMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectMessageWrapper\");\n$RefreshReg$(_c2, \"DirectMessage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx"],"names":["React","useEffect","useState","TransitionLayout","useRouter","styled","useChatDispatch","ChatList","ChatForm","useChatState","useAuthState","dayjs","useSWR","mutate","BACKEND_URL","axios","DirectMessageWrapper","div","DirectMessage","router","partner_id","query","dispatch","chat","message","setMessage","me","usersArr","userInfo","user_id","sort","room_key","fetcher","url","get","resp","data","error","test","console","log","type","payload","handleSendMessage","e","preventDefault","nickname","profile","insert_datetime","format","source","message_type","from_user","to_user","toString","JSON","stringify","chatList"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\"; \nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm'; \nimport { useChatState } from 'lib/providers/chatProvider';\nimport { TChatMessage } from 'types/chat';\nimport { useAuthState } from 'lib/providers/authProvider';\nimport dayjs from 'dayjs';\nimport useSWR, { mutate} from 'swr'; \nimport { BACKEND_URL } from 'config';\nimport axios from 'axios';\n \nconst DirectMessageWrapper = styled.div`\n  width:100%;\n  height:100%; \n  display:flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props { \n\n}\n\nconst DirectMessage = ({ }: Props): JSX.Element => {\n  \n\n  const router = useRouter()\n  const { partner_id } = router.query; \n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const [message, setMessage] = useState('');\n  const me = useAuthState();\n\n  const usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  const room_key = `${usersArr[0]}:${usersArr[1]}`;\n\n  const fetcher = async (url:string) => {\n    const resp = await axios.get(url);\n    return resp.data;\n  }\n\n  const {data, error} = useSWR(`${BACKEND_URL}/chat/message/${room_key}`, fetcher) \n\n  const test = () => {\n    console.log(\"DT\"); \n    console.log(data);\n    mutate(`${BACKEND_URL}/chat/message/${room_key}`, { ...data, test:'hakgu'});\n  }\n\n  useEffect(() => {\n    if (!partner_id) return;\n    \n    dispatch({ type: \"JOIN_ROOM\", payload: room_key })   \n    \n  }, []);\n\n  const handleSendMessage = (e:any):void => {\n    e.preventDefault();\n   \n    const { nickname, profile, user_id } = me.userInfo;\n    \n    const payload: TChatMessage = {\n        room_key,   \n        nickname, \n        profile, \n        insert_datetime: dayjs().format('YYYY-MM-DD HH:mm:ss'),\n        message,  \n        source: '',\n        message_type: 'text',\n        from_user:user_id,   \n        to_user:partner_id.toString() \n    }\n\n    dispatch({type:\"SEND_MESSAGE\", payload})   \n    \n    setMessage(''); \n  }\n\n  if (error) return <div>ERROR</div>;\n\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>  \n      <DirectMessageWrapper>\n        { JSON.stringify(data)}\n        partner_id : {partner_id}  \n        { JSON.stringify(me.userInfo.user_id)}\n        <ChatList datas={chat.chatList}/> \n        <ChatForm message={message} setMessage={setMessage} handleSendMessage={handleSendMessage} />\n        <button onClick={test}>MUTATE</button>\n     </DirectMessageWrapper>\n   </TransitionLayout> \n  )\n\n} \n\nexport default DirectMessage;"]},"metadata":{},"sourceType":"module"}