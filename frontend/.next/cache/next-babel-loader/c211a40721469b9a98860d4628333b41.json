{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/_app.tsx\",\n    _this = this;\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../scss/global.scss'; // import Cookies from \"js-cookie\";\n\nimport { AuthProvider } from \"../lib/providers/authProvider\"; // import jwtDecode from \"jwt-decode\"; \n\nimport React from 'react'; // interface token {\n//   user_id: string;\n// }\n\nvar App = function App(_ref) {\n  var Component = _ref.Component;\n  // const accessToken = Cookies.get(\"accessToken\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/_app.tsx"],"names":["AuthProvider","React","App","Component"],"mappings":";;;;;;AAAA,OAAO,kCAAP;AACA,OAAO,qBAAP,C,CACA;;AACA,SAASA,YAAT,QAA6B,+BAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC7B;AAGA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,6BACG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAXD;;KAAMD,G;AAaN,eAAeA,GAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css'\nimport '../scss/global.scss'; \n// import Cookies from \"js-cookie\";\nimport { AuthProvider } from \"../lib/providers/authProvider\"; \n// import jwtDecode from \"jwt-decode\"; \nimport React from 'react';\n\n// interface token {\n//   user_id: string;\n// }\n\nconst App = ({ Component }) => {\n  // const accessToken = Cookies.get(\"accessToken\");\n  \n\n  return (\n    <> \n      <AuthProvider>\n         <Component /> \n       </AuthProvider>\n    </>\n  );\n};\n\nexport default App; \n "]},"metadata":{},"sourceType":"module"}