{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/form/BoardWriteForm.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport dynamic from 'next/dynamic';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nconst Editor = dynamic(() => import('react-draft-wysiwyg').then(mod => mod.Editor), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-draft-wysiwyg')],\n    modules: ['react-draft-wysiwyg']\n  }\n});\nconst BoardWriteFormWrapper = styled.div.withConfig({\n  displayName: \"BoardWriteForm__BoardWriteFormWrapper\",\n  componentId: \"u1i2ut-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\nconst PaddingWrapper = styled.div.withConfig({\n  displayName: \"BoardWriteForm__PaddingWrapper\",\n  componentId: \"u1i2ut-1\"\n})([\"width:100%;padding:15px;\"]);\n\nconst BoardWriteForm = ({}) => {\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = editorState => {\n    // editorState에 값 설정\n    setEditorState(editorState);\n  };\n\n  const handleSubmit = () => {\n    //   HTML화 된 값\n    const editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log('TARGET', {\n      id: targetId,\n      status: status,\n      memo: editorToHtml.toString()\n    });\n    Axios.put(BACKEND_URL + '/calculate/fit-pictorial', {\n      id: targetId,\n      status: status,\n      memo: editorToHtml.toString()\n    }).then(() => {\n      // Editor 초기화\n      // window.location.reload();\n      setEditorState(EditorState.createEmpty());\n      setActive(false);\n    });\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardWriteFormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(PaddingWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Editor // 에디터와 툴바 모두에 적용되는 클래스\n      , {\n        wrapperClassName: \"wrapper-class\" // 에디터 주변에 적용된 클래스\n        ,\n        editorClassName: \"editor\" // 툴바 주위에 적용된 클래스\n        ,\n        toolbarClassName: \"toolbar-class\" // 툴바 설정\n        ,\n        toolbar: {\n          // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          history: {\n            inDropdown: false\n          }\n        },\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\" // 한국어 설정\n        ,\n        localization: {\n          locale: 'ko'\n        } // 초기값 설정\n        ,\n        editorState: editorState // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n        ,\n        onEditorStateChange: onEditorStateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardWriteForm;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/form/BoardWriteForm.tsx"],"names":["React","useState","styled","dynamic","EditorState","convertToRaw","draftToHtml","Editor","then","mod","ssr","BoardWriteFormWrapper","div","PaddingWrapper","BoardWriteForm","editorState","setEditorState","createEmpty","onEditorStateChange","handleSubmit","editorToHtml","getCurrentContent","console","log","id","targetId","status","memo","toString","Axios","put","BACKEND_URL","setActive","list","inDropdown","textAlign","link","history","locale"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport dynamic from 'next/dynamic';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromHTML,\n  ContentState,\n} from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\n\nconst Editor: any = dynamic(\n  () => import('react-draft-wysiwyg').then((mod) => mod.Editor),\n  {\n    ssr: false,\n  }\n);\n\nconst BoardWriteFormWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst PaddingWrapper = styled.div`\n  width: 100%;\n  padding: 15px;\n`;\n\ninterface Props {}\n\nconst BoardWriteForm = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = (editorState: any) => {\n    // editorState에 값 설정\n    setEditorState(editorState);\n  };\n\n  const handleSubmit = () => {\n    //   HTML화 된 값\n    const editorToHtml = draftToHtml(\n      convertToRaw(editorState.getCurrentContent())\n    );\n\n    console.log('TARGET', {\n      id: targetId,\n      status: status,\n      memo: editorToHtml.toString(),\n    });\n\n    Axios.put(BACKEND_URL + '/calculate/fit-pictorial', {\n      id: targetId,\n      status: status,\n      memo: editorToHtml.toString(),\n    }).then(() => {\n      // Editor 초기화\n      // window.location.reload();\n      setEditorState(EditorState.createEmpty());\n      setActive(false);\n    });\n\n    return;\n  };\n\n  return (\n    <BoardWriteFormWrapper>\n      <PaddingWrapper>\n        <Editor\n          // 에디터와 툴바 모두에 적용되는 클래스\n          wrapperClassName=\"wrapper-class\"\n          // 에디터 주변에 적용된 클래스\n          editorClassName=\"editor\"\n          // 툴바 주위에 적용된 클래스\n          toolbarClassName=\"toolbar-class\"\n          // 툴바 설정\n          toolbar={{\n            // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n            list: { inDropdown: true },\n            textAlign: { inDropdown: true },\n            link: { inDropdown: true },\n            history: { inDropdown: false },\n          }}\n          placeholder=\"내용을 작성해주세요.\"\n          // 한국어 설정\n          localization={{\n            locale: 'ko',\n          }}\n          // 초기값 설정\n          editorState={editorState}\n          // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n          onEditorStateChange={onEditorStateChange}\n        />\n      </PaddingWrapper>\n    </BoardWriteFormWrapper>\n  );\n};\n\nexport default BoardWriteForm;\n"]},"metadata":{},"sourceType":"module"}