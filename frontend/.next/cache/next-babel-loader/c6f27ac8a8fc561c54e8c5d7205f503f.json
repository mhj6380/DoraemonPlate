{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/WebstormProjects/DoraemonPlate/frontend_v2/pages/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\"; // import\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsError,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n    console.log(\"me\", me);\n  }, [me]);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(\"loadPostsLoading\", loadPostsLoading);\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    console.log(\"hasMorePost\", hasMorePosts);\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [loadPostsError, me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/munhagju/WebstormProjects/DoraemonPlate/frontend_v2/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsError","loadPostsLoading","post","type","console","log","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC,C,CACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA;AAJI,MAKFX,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACM,IAAlB,CALf;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBV,EAAlB;AACD,GALQ,EAKN,CAACA,EAAD,CALM,CAAT;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACd,aAASkB,QAAT,GAAoB;AAClBF,MAAAA,OAAO,CAACC,GAAR,CACEE,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;;AAMA,UACEL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIb,YAAY,IAAI,CAACE,gBAArB,EAAuC;AACrCG,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,gBAAhC;AACAP,UAAAA,QAAQ,CAAC;AACPS,YAAAA,IAAI,EAAEX;AADC,WAAD,CAAR;AAGD;AACF;AACF;;AAEDY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,YAA3B;AACAQ,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACP,YAAD,EAAeE,gBAAf,CA1BM,CAAT;AA4BA,sBACE,QAAC,SAAD;AAAA,eACGD,cADH,EAEGL,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFT,EAGGG,SAAS,CAACiB,GAAV,CAAeb,IAAD,iBACb,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACc,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtDD;;AAwDA,eAAevB,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppLayout from \"../components/AppLayout\";\n\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n// import\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsError,\n    loadPostsLoading,\n  } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n    console.log(\"me\", me);\n  }, [me]);\n\n  useEffect(() => {\n    function onScroll() {\n      console.log(\n        window.scrollY,\n        document.documentElement.clientHeight,\n        document.documentElement.scrollHeight\n      );\n\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(\"loadPostsLoading\", loadPostsLoading);\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n          });\n        }\n      }\n    }\n\n    console.log(\"hasMorePost\", hasMorePosts);\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {loadPostsError}\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}