{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/swiper/BasicSwiper.tsx\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nconst BasicSwiperWrapper = styled.div.withConfig({\n  displayName: \"BasicSwiper__BasicSwiperWrapper\",\n  componentId: \"sc-1458y1j-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\nconst SwiperItemComp = styled(Swiper).withConfig({\n  displayName: \"BasicSwiper__SwiperItemComp\",\n  componentId: \"sc-1458y1j-1\"\n})([\".swiper_item_inner{width:100%;height:100%;border-radius:10px;overflow:hidden;position:relative;cursor:pointer;.info{width:100%;padding:10px;position:absolute;bottom:10px;.title{color:#fff;font-size:12px;}}}img{width:100%;height:100%;object-fit:cover;}.gra_bg{width:100%;height:100%;position:absolute;right:0;bottom:0;}@media (min-width:992px){.swiper_item_inner{.info{.title{font-size:16px;}}}}.swiper-button-prev,.swiper-button-next{color:#fff;}\"]);\n\nconst BasicSwiper = ({\n  datas,\n  m,\n  pc\n}) => {\n  const [windowWidth, setWindowWith] = React.useState(0);\n\n  const handleRedirect = href => {\n    window.location.href = href;\n    return;\n  };\n\n  React.useEffect(() => {\n    setWindowWith(window.innerWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BasicSwiperWrapper, {\n    children: /*#__PURE__*/_jsxDEV(SwiperItemComp, {\n      spaceBetween: 10,\n      slidesPerView: windowWidth < 992 ? m : pc,\n      speed: 400,\n      navigation: true,\n      autoplay: true,\n      pagination: {\n        clickable: true\n      },\n      onSlideChange: () => console.log(\"slide change\"),\n      onSwiper: swiper => console.log(swiper),\n      loop: true,\n      children: datas.map(item => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper_item_inner\",\n          children: [item.title && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"gra_bg\",\n              src: \"/asset/black_gradient.png\",\n              alt: \"gra_bg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.img_url,\n            alt: \"banner\",\n            onClick: () => {\n              handleRedirect(item.target_url);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }, this)\n      }, item.img_url + item.target_url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BasicSwiper;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/swiper/BasicSwiper.tsx"],"names":["React","styled","Swiper","SwiperSlide","BasicSwiperWrapper","div","SwiperItemComp","BasicSwiper","datas","m","pc","windowWidth","setWindowWith","useState","handleRedirect","href","window","location","useEffect","innerWidth","clickable","console","log","swiper","map","item","title","img_url","target_url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,+DAAxB;AAQA,MAAMC,cAAc,GAAGL,MAAM,CAACC,MAAD,CAAT;AAAA;AAAA;AAAA,scAApB;;AAmEA,MAAMK,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,CAAT;AAAYC,EAAAA;AAAZ,CAAD,KAAuC;AAEzD,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAArC;;AAEA,QAAMC,cAAc,GAAIC,IAAD,IAAkB;AACvCC,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuBA,IAAvB;AACA;AACD,GAHD;;AAKAf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,aAAa,CAACI,MAAM,CAACG,UAAR,CAAb;AACD,GAFD,EAEG,EAFH;AAIA,sBACE,QAAC,kBAAD;AAAA,2BACG,QAAC,cAAD;AACC,MAAA,YAAY,EAAE,EADf;AAEC,MAAA,aAAa,EAAER,WAAW,GAAG,GAAd,GAAoBF,CAApB,GAAwBC,EAFxC;AAGC,MAAA,KAAK,EAAE,GAHR;AAIC,MAAA,UAAU,MAJX;AAKC,MAAA,QAAQ,MALT;AAMC,MAAA,UAAU,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OANb;AAOC,MAAA,aAAa,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAPtB;AAQC,MAAA,QAAQ,EAAGC,MAAD,IAAYF,OAAO,CAACC,GAAR,CAAYC,MAAZ,CARvB;AASC,MAAA,IAAI,EAAE,IATP;AAAA,gBAYEf,KAAK,CAACgB,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;AAAA,+BACG;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBAEEA,IAAI,CAACC,KAAL,iBACC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,GAAG,EAAC,2BAA5B;AAAwD,cAAA,GAAG,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBD,IAAI,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BAHH,eAWC;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE,OAAf;AAAwB,YAAA,GAAG,EAAC,QAA5B;AAAqC,YAAA,OAAO,EAAE,MAAM;AAAEb,cAAAA,cAAc,CAACW,IAAI,CAACG,UAAN,CAAd;AAAiC;AAAvF;AAAA;AAAA;AAAA;AAAA,kBAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,SAAkBH,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,UAAtC;AAAA;AAAA;AAAA;AAAA,cADD;AAZF;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAjDD;;AAmDA,eAAerB,WAAf","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nconst BasicSwiperWrapper = styled.div`\n  width:100%;\n  height:100%;\n  display:flex;\n  flex-flow: row wrap;\n`; \n\n \nconst SwiperItemComp = styled(Swiper)`\n.swiper_item_inner{\n  width:100%;\n  height:100%;\n  border-radius:10px;\n  overflow:hidden;\n  position:relative;\n  cursor:pointer;\n  .info{\n    width:100%;\n    padding:10px;\n    position:absolute;\n    bottom:10px;\n    .title{color:#fff;font-size:12px;}\n  }\n}    \nimg{width:100%;height:100%;object-fit:cover;}\n\n.gra_bg{\n  width:100%;height:100%;position:absolute;right:0;bottom:0;\n}  \n\n@media (min-width: 992px) { \n\n  .swiper_item_inner{\n    .info{\n      .title{font-size:16px;}\n    }\n  }    \n}\n\n\n  // 커스텀 애롱 사용시 주석 해제\n  // .swiper-button-prev:after, .swiper-button-next:after{\n  //   display:none;\n  // }\n\n  .swiper-button-prev,.swiper-button-next{\n    color: #fff;\n  }\n  \n  // 커스텀 애롱 사용시 주석 해제\n  // .swiper-button-prev{\n  //   background-image: url('../../asset/test.jpg');\n  // }\n\n  // .swiper-button-next{\n  //   background-image: url('../../asset/test.jpg');\n  // }\n  \n`;\n\n\ninterface SwiperItem{ \n  id: number;\n  img_url: string;\n  target_url: string;\n  title?: string;\n}\n\ninterface Props { \n  datas: SwiperItem[];  \n  m: number;\n  pc: number;\n} \n\n\nconst BasicSwiper = ({ datas, m, pc }:Props):JSX.Element=> { \n  \n  const [windowWidth, setWindowWith] = React.useState(0); \n  \n  const handleRedirect = (href: string) => { \n    window.location.href = href;\n    return; \n  }\n  \n  React.useEffect(() => {\n    setWindowWith(window.innerWidth);\n  }, []);\n  \n  return (\n    <BasicSwiperWrapper>\n       <SwiperItemComp\n        spaceBetween={10}  \n        slidesPerView={windowWidth < 992 ? m : pc}  \n        speed={400}\n        navigation\n        autoplay  \n        pagination={{ clickable: true }}\n        onSlideChange={() => console.log(\"slide change\")}\n        onSwiper={(swiper) => console.log(swiper)}\n        loop={true} \n      >\n        \n        {datas.map((item:SwiperItem) => ( \n          <SwiperSlide key={item.img_url + item.target_url}> \n             <div className=\"swiper_item_inner\">\n              \n              {item.title && (\n                <>\n                  <img className=\"gra_bg\" src='/asset/black_gradient.png' alt='gra_bg' />\n                  <div className=\"info\">\n                    <span className=\"title\">{item.title}</span>\n                  </div>\n                </>  \n              )}\n              \n              <img src={item.img_url} alt=\"banner\" onClick={() => { handleRedirect(item.target_url) }} /> \n            </div>\n          </SwiperSlide>          \n        ))} \n\n      </SwiperItemComp>  \n    </BasicSwiperWrapper>\n  )\n\n}\n\nexport default BasicSwiper;"]},"metadata":{},"sourceType":"module"}