{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Formik, Form } from 'formik';\nvar BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"sc-1x045vr-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = BoardWriteWrapper;\n\nvar BoardWritePage = function BoardWritePage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(EditorState.createEmpty()),\n      editorState = _useState[0],\n      setEditorState = _useState[1];\n\n  var handleSubmit = function handleSubmit() {\n    //   HTML화 된 값\n    var editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log(editorToHtml.toString());\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            text: '',\n            isbool: false,\n            checks: [],\n            nation: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: function validate(values) {\n            var errors = {}; // text에  !나 ? 가 들어가면 에러를 뿜는 예제\n\n            if (values.text.includes('!') || values.text.includes('?')) {\n              errors.text = '! or ? cannot be username';\n            }\n\n            return errors;\n          },\n          onSubmit: function onSubmit(data, _ref2) {\n            var setSubmitting = _ref2.setSubmitting;\n            setSubmitting(true);\n            console.log(data);\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"\\uC791\\uC131\\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoardWritePage, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\");\n\n_c2 = BoardWritePage;\nexport default BoardWritePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardWriteWrapper\");\n$RefreshReg$(_c2, \"BoardWritePage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx"],"names":["useState","styled","TransitionLayout","EditorField","EditorState","convertToRaw","draftToHtml","Formik","Form","BoardWriteWrapper","div","BoardWritePage","createEmpty","editorState","setEditorState","handleSubmit","editorToHtml","getCurrentContent","console","log","toString","text","isbool","checks","nation","tags","tag_name","values","errors","includes","data","setSubmitting"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,IAAMC,iBAAiB,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+DAAvB;KAAMD,iB;;AASN,IAAME,cAAc,GAAG,SAAjBA,cAAiB,OAA4B;AAAA;;AAAA;;AAAA,kBACXX,QAAQ,CAACI,WAAW,CAACQ,WAAZ,EAAD,CADG;AAAA,MAC1CC,WAD0C;AAAA,MAC7BC,cAD6B;;AAGjD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB;AACA,QAAMC,YAAY,GAAGV,WAAW,CAC9BD,YAAY,CAACQ,WAAW,CAACI,iBAAZ,EAAD,CADkB,CAAhC;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,QAAb,EAAZ;AACA;AACD,GARD;;AAUA,sBACE,QAAC,gBAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,EADO;AAEbC,YAAAA,MAAM,EAAE,KAFK;AAGbC,YAAAA,MAAM,EAAE,EAHK;AAIbC,YAAAA,MAAM,EAAE,EAJK;AAKbC,YAAAA,IAAI,EAAE,CACJ;AACEC,cAAAA,QAAQ,EAAE;AADZ,aADI;AALO,WADjB;AAYE,UAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AACpB,gBAAMC,MAA8B,GAAG,EAAvC,CADoB,CAEpB;;AACA,gBAAID,MAAM,CAACN,IAAP,CAAYQ,QAAZ,CAAqB,GAArB,KAA6BF,MAAM,CAACN,IAAP,CAAYQ,QAAZ,CAAqB,GAArB,CAAjC,EAA4D;AAC1DD,cAAAA,MAAM,CAACP,IAAP,GAAc,2BAAd;AACD;;AACD,mBAAOO,MAAP;AACD,WAnBH;AAoBE,UAAA,QAAQ,EAAE,kBAACE,IAAD,SAA6B;AAAA,gBAApBC,aAAoB,SAApBA,aAAoB;AACrCA,YAAAA,aAAa,CAAC,IAAD,CAAb;AAEAb,YAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AAEAC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WA1BH;AAAA,iCA4BE,QAAC,IAAD;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,GAAG,EAAElB,WAAlB;AAA+B,cAAA,MAAM,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,qBADF,eAUE;AAAQ,cAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BF;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAiDD,CA9DD;;GAAMJ,c;;MAAAA,c;AAgEN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Formik, Form } from 'formik';\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleSubmit = () => {\n    //   HTML화 된 값\n    const editorToHtml = draftToHtml(\n      convertToRaw(editorState.getCurrentContent())\n    );\n\n    console.log(editorToHtml.toString());\n    return;\n  };\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              text: '',\n              isbool: false,\n              checks: [],\n              nation: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              const errors: Record<string, string> = {};\n              // text에  !나 ? 가 들어가면 에러를 뿜는 예제\n              if (values.text.includes('!') || values.text.includes('?')) {\n                errors.text = '! or ? cannot be username';\n              }\n              return errors;\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n\n              console.log(data);\n\n              setSubmitting(false);\n            }}\n          >\n            <Form>\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n              <button onClick={handleSubmit}>작성완료</button>\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}