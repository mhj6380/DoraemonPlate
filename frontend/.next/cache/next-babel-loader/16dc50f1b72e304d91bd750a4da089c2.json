{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Formik, Form } from 'formik';\nimport BasicTextField from 'material/BasicTextField';\nconst BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"sc-1x045vr-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n\nconst BoardWritePage = ({}) => {\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n\n  const handleSubmit = () => {\n    //   HTML화 된 값\n    const editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log(editorToHtml.toString());\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: values => {\n            const errors = {};\n\n            if (values.title === '') {\n              errors.text = '제목을 입력해주세요.';\n            }\n\n            return errors;\n          },\n          onSubmit: (data, {\n            setSubmitting\n          }) => {\n            setSubmitting(true);\n            console.log(data);\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"\\uC791\\uC131\\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardWritePage;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx"],"names":["useState","styled","TransitionLayout","EditorField","EditorState","convertToRaw","draftToHtml","Formik","Form","BasicTextField","BoardWriteWrapper","div","BoardWritePage","editorState","setEditorState","createEmpty","handleSubmit","editorToHtml","getCurrentContent","console","log","toString","title","content","tags","tag_name","values","errors","text","data","setSubmitting"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,MAAMC,iBAAiB,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,+DAAvB;;AASA,MAAMC,cAAc,GAAG,CAAC,EAAD,KAA4B;AACjD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAACI,WAAW,CAACW,WAAZ,EAAD,CAA9C;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB;AACA,UAAMC,YAAY,GAAGX,WAAW,CAC9BD,YAAY,CAACQ,WAAW,CAACK,iBAAZ,EAAD,CADkB,CAAhC;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,QAAb,EAAZ;AACA;AACD,GARD;;AAUA,sBACE,QAAC,gBAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AACbC,YAAAA,KAAK,EAAE,EADM;AAEbC,YAAAA,OAAO,EAAE,EAFI;AAGbC,YAAAA,IAAI,EAAE,CACJ;AACEC,cAAAA,QAAQ,EAAE;AADZ,aADI;AAHO,WADjB;AAUE,UAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,kBAAMC,MAA8B,GAAG,EAAvC;;AAEA,gBAAID,MAAM,CAACJ,KAAP,KAAiB,EAArB,EAAyB;AACvBK,cAAAA,MAAM,CAACC,IAAP,GAAc,aAAd;AACD;;AAED,mBAAOD,MAAP;AACD,WAlBH;AAmBE,UAAA,QAAQ,EAAE,CAACE,IAAD,EAAO;AAAEC,YAAAA;AAAF,WAAP,KAA6B;AACrCA,YAAAA,aAAa,CAAC,IAAD,CAAb;AAEAX,YAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAEAC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAzBH;AAAA,iCA2BE,QAAC,IAAD;AAAA,oCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAa,cAAA,GAAG,EAAEjB,WAAlB;AAA+B,cAAA,MAAM,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAWE;AAAQ,cAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BF;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CA9DD;;AAgEA,eAAeJ,cAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Formik, Form } from 'formik';\nimport BasicTextField from 'material/BasicTextField';\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleSubmit = () => {\n    //   HTML화 된 값\n    const editorToHtml = draftToHtml(\n      convertToRaw(editorState.getCurrentContent())\n    );\n\n    console.log(editorToHtml.toString());\n    return;\n  };\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                errors.text = '제목을 입력해주세요.';\n              }\n\n              return errors;\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n\n              console.log(data);\n\n              setSubmitting(false);\n            }}\n          >\n            <Form>\n              <BasicTextField name=\"text\" />\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n              <button onClick={handleSubmit}>작성완료</button>\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}