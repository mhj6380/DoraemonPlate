{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\nconst DataTableWrapper = styled.div.withConfig({\n  displayName: \"DataTable__DataTableWrapper\",\n  componentId: \"sc-14fb33p-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: (a, b) => a.name - b.name\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nconst DataTable = ({}) => {\n  const {\n    0: selectedRowKeys,\n    1: setSelectedRowKeys\n  } = useState([]);\n\n  const onSelectChange = selectedRowKeys => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(DataTableWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx"],"names":["useState","styled","Table","DataTableWrapper","div","columns","title","dataIndex","sorter","a","b","name","data","i","push","key","age","address","DataTable","selectedRowKeys","setSelectedRowKeys","onSelectChange","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\n\nconst DataTableWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name - b.name,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\ninterface Props {}\n\nconst DataTable = ({}: Props): JSX.Element => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const onSelectChange = (selectedRowKeys: any) => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return (\n    <DataTableWrapper>\n      <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n    </DataTableWrapper>\n  );\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}