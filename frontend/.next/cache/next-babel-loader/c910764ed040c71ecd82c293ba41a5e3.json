{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\";\nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm';\nimport { useChatState } from 'lib/providers/chatProvider';\nimport { useAuthState } from 'lib/providers/authProvider';\nconst DirectMessageWrapper = styled.div.withConfig({\n  displayName: \"partner_id__DirectMessageWrapper\",\n  componentId: \"sc-4pw1eg-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n\nconst DirectMessage = ({}) => {\n  const router = useRouter();\n  const {\n    partner_id\n  } = router.query;\n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const me = useAuthState();\n  const usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  const room_key = `${usersArr[0]}:${usersArr[1]}`;\n  useEffect(() => {\n    if (!partner_id) return;\n    console.log(\"ROOM\", room_key);\n    dispatch({\n      type: \"JOIN_ROOM\",\n      payload: room_key\n    });\n  }, []);\n\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const payload = {\n      id: 3,\n      room_key,\n      nickname: \"학구\",\n      profile: \"profile2\",\n      datetime: 'datetime2',\n      message,\n      msgType: 'image2',\n      source: 'source2'\n    };\n    dispatch({\n      type: \"SEND_MESSAGE\",\n      payload\n    });\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(DirectMessageWrapper, {\n      children: [\"partner_id : \", partner_id, JSON.stringify(me.userInfo.user_id), /*#__PURE__*/_jsxDEV(ChatList, {\n        datas: chat.chatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DirectMessage;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx"],"names":["React","useEffect","useState","TransitionLayout","useRouter","styled","useChatDispatch","ChatList","ChatForm","useChatState","useAuthState","DirectMessageWrapper","div","DirectMessage","router","partner_id","query","dispatch","chat","message","setMessage","me","usersArr","userInfo","user_id","sort","room_key","console","log","type","payload","handleSendMessage","e","preventDefault","id","nickname","profile","datetime","msgType","source","JSON","stringify","chatList"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,MAAMC,oBAAoB,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,+DAA1B;;AAWA,MAAMC,aAAa,GAAG,CAAC,EAAD,KAA2B;AAC/C,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAiBD,MAAM,CAACE,KAA9B;AACA,QAAMC,QAAQ,GAAGX,eAAe,EAAhC;AACA,QAAMY,IAAI,GAAGT,YAAY,EAAzB;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMmB,EAAE,GAAGX,YAAY,EAAvB;AAEA,QAAMY,QAAQ,GAAG,CAACD,EAAE,CAACE,QAAH,CAAYC,OAAb,EAAsBT,UAAtB,CAAjB;AACAO,EAAAA,QAAQ,CAACG,IAAT;AACA,QAAMC,QAAQ,GAAI,GAAEJ,QAAQ,CAAC,CAAD,CAAI,IAAGA,QAAQ,CAAC,CAAD,CAAI,EAA/C;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,UAAL,EAAiB;AAGjBY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AACAT,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,WAAN;AAAmBC,MAAAA,OAAO,EAACJ;AAA3B,KAAD,CAAR;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,iBAAiB,GAAIC,CAAD,IAAgB;AACxCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMH,OAAqB,GAAG;AAC5BI,MAAAA,EAAE,EAAE,CADwB;AAE5BR,MAAAA,QAF4B;AAG5BS,MAAAA,QAAQ,EAAE,IAHkB;AAI5BC,MAAAA,OAAO,EAAE,UAJmB;AAK5BC,MAAAA,QAAQ,EAAE,WALkB;AAM5BlB,MAAAA,OAN4B;AAO5BmB,MAAAA,OAAO,EAAE,QAPmB;AAQ5BC,MAAAA,MAAM,EAAE;AARoB,KAA9B;AAWEtB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA;AAAtB,KAAD,CAAR;AAEFV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAjBD;;AAmBA,sBACE,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,cAAxB;AAA6B,IAAA,aAAa,EAAE,IAA5C;AAAA,2BACA,QAAC,oBAAD;AAAA,kCACkBL,UADlB,EAEMyB,IAAI,CAACC,SAAL,CAAepB,EAAE,CAACE,QAAH,CAAYC,OAA3B,CAFN,eAGI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEN,IAAI,CAACwB;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEvB,OAAnB;AAA4B,QAAA,UAAU,EAAEC,UAAxC;AAAoD,QAAA,iBAAiB,EAAEW;AAAvE;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlDD;;AAoDA,eAAelB,aAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\"; \nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm'; \nimport { useChatState } from 'lib/providers/chatProvider';\nimport { TChatMessage } from 'types/chat';\nimport { useAuthState } from 'lib/providers/authProvider';\n\nconst DirectMessageWrapper = styled.div`\n  width:100%;\n  height:100%; \n  display:flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props { \n\n}\n\nconst DirectMessage = ({  }:Props):JSX.Element=> {\n  const router = useRouter()\n  const { partner_id } = router.query; \n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const [message, setMessage] = useState('');\n  const me = useAuthState();\n\n  const usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  const room_key = `${usersArr[0]}:${usersArr[1]}`;\n\n  useEffect(() => {\n    if (!partner_id) return;\n\n    \n    console.log(\"ROOM\", room_key);\n    dispatch({type:\"JOIN_ROOM\", payload:room_key})   \n  }, []);\n\n  const handleSendMessage = (e:any):void => {\n    e.preventDefault();\n   \n    const payload: TChatMessage = {\n      id: 3,\n      room_key,   \n      nickname: \"학구\", \n      profile: \"profile2\", \n      datetime: 'datetime2',\n      message,  \n      msgType: 'image2',\n      source: 'source2'\n      } \n\n      dispatch({type:\"SEND_MESSAGE\", payload})   \n    \n    setMessage(''); \n  }\n\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>  \n    <DirectMessageWrapper>\n        partner_id : {partner_id}  \n        { JSON.stringify(me.userInfo.user_id)}\n        <ChatList datas={chat.chatList}/> \n        <ChatForm message={message} setMessage={setMessage} handleSendMessage={handleSendMessage}/>\n     </DirectMessageWrapper>\n   </TransitionLayout> \n  )\n\n} \n\nexport default DirectMessage;"]},"metadata":{},"sourceType":"module"}