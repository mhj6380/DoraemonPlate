{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/form/QuilTest.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport axios from 'axios';\n\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false; // Quill.register('modules/clipboard', PlainClipboard, true);\n\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getMetaTagElements\", stringContent => {\n      const el = document.createElement('div');\n      el.innerHTML = stringContent;\n      return el.getElementsByTagName('meta');\n    });\n  }\n\n  async onPaste(e) {\n    let clipboardData = e.clipboardData || window.clipboardData;\n    let pastedData = await clipboardData.getData('Text');\n    const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n\n    if (urlMatches.length > 0) {\n      e.preventDefault();\n      urlMatches.forEach(link => {\n        axios.get(link).then(payload => {\n          // let title, image, url, description;\n          let title, image, url;\n\n          for (let node of this.getMetaTagElements(payload)) {\n            if (node.getAttribute('property') === 'og:title') {\n              title = node.getAttribute('content');\n            }\n\n            if (node.getAttribute('property') === 'og:image') {\n              image = node.getAttribute('content');\n            }\n\n            if (node.getAttribute('property') === 'og:url') {\n              url = node.getAttribute('content');\n            } // if (node.getAttribute(\"property\") === \"og:description\") {\n            //     description = node.getAttribute(\"content\");\n            // }\n\n          }\n\n          const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n          let range = this.quill.getSelection();\n          let position = range ? range.index : 0;\n          this.quill.pasteHTML(position, rendered, 'silent');\n          this.quill.setSelection(position + rendered.length);\n        }).catch(error => console.error(error));\n      });\n    } else {\n      //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다.\n      super.onPaste(e);\n    }\n  }\n\n}\n\nQuill.register('modules/clipboard', Clipboard, true);\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n  static create(value) {\n    const imgTag = super.create();\n    imgTag.setAttribute('src', value.src);\n    imgTag.setAttribute('alt', value.alt);\n    imgTag.setAttribute('width', '100%');\n    return imgTag;\n  }\n\n  static value(node) {\n    return {\n      src: node.getAttribute('src'),\n      alt: node.getAttribute('alt')\n    };\n  }\n\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n  static create(value) {\n    if (value && value.src) {\n      const videoTag = super.create();\n      videoTag.setAttribute('src', value.src);\n      videoTag.setAttribute('title', value.title);\n      videoTag.setAttribute('width', '100%');\n      videoTag.setAttribute('controls', '');\n      return videoTag;\n    } else {\n      const iframeTag = document.createElement('iframe');\n      iframeTag.setAttribute('src', value);\n      iframeTag.setAttribute('frameborder', '0');\n      iframeTag.setAttribute('allowfullscreen', true);\n      iframeTag.setAttribute('width', '100%');\n      return iframeTag;\n    }\n  }\n\n  static value(node) {\n    if (node.getAttribute('title')) {\n      return {\n        src: node.getAttribute('src'),\n        alt: node.getAttribute('title')\n      };\n    } else {\n      return node.getAttribute('src');\n    } // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n\n  }\n\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = '첨부파일 - ';\n    const bTag = document.createElement('b'); //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n\n    bTag.innerText = value;\n    const linkTag = document.createElement('a');\n    linkTag.setAttribute('href', value);\n    linkTag.setAttribute('target', '_blank');\n    linkTag.setAttribute('className', 'file-link-inner-post');\n    linkTag.appendChild(bTag); //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n    const node = super.create();\n    node.appendChild(prefixTag);\n    node.appendChild(linkTag);\n    return node;\n  }\n\n  static value(node) {\n    const linkTag = node.querySelector('a');\n    return linkTag.getAttribute('href');\n  }\n\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = '투표 - ';\n    const bTag = document.createElement('b');\n    bTag.innerText = value.title;\n    const node = super.create();\n    node.setAttribute('id', value.id);\n    node.appendChild(prefixTag);\n    node.appendChild(bTag);\n    return node;\n  }\n\n  static value(node) {\n    const id = node.getAttribute('id');\n    const bTag = node.querySelector('b');\n    const title = bTag.innerText;\n    return {\n      id,\n      title\n    };\n  }\n\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"bandId\", void 0);\n\n    _defineProperty(this, \"placeholder\", void 0);\n\n    _defineProperty(this, \"onEditorChange\", void 0);\n\n    _defineProperty(this, \"onFilesChange\", void 0);\n\n    _defineProperty(this, \"onPollsChange\", void 0);\n\n    _defineProperty(this, \"_isMounted\", void 0);\n\n    _defineProperty(this, \"handleChange\", html => {\n      console.log('html', html); // https://youtu.be/BbR-QCoKngE\n      // https://www.youtube.com/embed/ZwKhufmMxko\n      // https://tv.naver.com/v/9176888\n      // renderToStaticMarkup(ReactHtmlParser(html, options));\n\n      this.setState({\n        editorHtml: html\n      }, () => {\n        this.props.onEditorChange(this.state.editorHtml);\n      });\n    });\n\n    _defineProperty(this, \"imageHandler\", () => {\n      this.inputOpenImageRef.current.click();\n    });\n\n    _defineProperty(this, \"videoHandler\", () => {\n      this.inputOpenVideoRef.current.click();\n    });\n\n    _defineProperty(this, \"fileHandler\", () => {\n      this.inputOpenFileRef.current.click();\n    });\n\n    _defineProperty(this, \"insertImage\", e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n        const file = e.currentTarget.files[0];\n        let formData = new FormData();\n        const config = {\n          header: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        formData.append('file', file);\n        axios.post('/api/blog/uploadfiles', formData, config).then(response => {\n          if (response.data.success) {\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n            let range = quill.getSelection();\n            let position = range ? range.index : 0; //먼저 노드 서버에다가 이미지를 넣은 다음에   여기 아래에 src에다가 그걸 넣으면 그게\n            //이미지 블롯으로 가서  크리에이트가 이미지를 형성 하며 그걸 발류에서     src 랑 alt 를 가져간후에  editorHTML에 다가 넣는다.\n\n            quill.insertEmbed(position, 'image', {\n              src: 'http://localhost:5000/' + response.data.url,\n              alt: response.data.fileName\n            });\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => {\n                this.props.onFilesChange(this.state.files);\n              });\n            }\n          } else {\n            return alert('failed to upload file');\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"insertVideo\", e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n        const file = e.currentTarget.files[0];\n        let formData = new FormData();\n        const config = {\n          header: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        formData.append('file', file);\n        axios.post('/api/blog/uploadfiles', formData, config).then(response => {\n          if (response.data.success) {\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n            let range = quill.getSelection();\n            let position = range ? range.index : 0;\n            quill.insertEmbed(position, 'video', {\n              src: 'http://localhost:5000/' + response.data.url,\n              title: response.data.fileName\n            });\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => {\n                this.props.onFilesChange(this.state.files);\n              });\n            }\n          } else {\n            return alert('failed to upload file');\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"insertFile\", e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n        const file = e.currentTarget.files[0];\n        console.log(file);\n        let formData = new FormData();\n        const config = {\n          header: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        formData.append('file', file);\n        axios.post('/api/blog/uploadfiles', formData, config).then(response => {\n          if (response.data.success) {\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n            let range = quill.getSelection();\n            let position = range ? range.index : 0;\n            quill.insertEmbed(position, 'file', response.data.fileName);\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => {\n                this.props.onFilesChange(this.state.files);\n              });\n            }\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"modules\", {\n      syntax: true,\n      toolbar: {\n        container: '#toolbar',\n        //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다.\n        handlers: {\n          insertImage: this.imageHandler,\n          insertVideo: this.videoHandler,\n          insertFile: this.fileHandler,\n          insertPoll: this.pollHandler\n        }\n      }\n    });\n\n    _defineProperty(this, \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'image', 'video', 'file', 'link', 'code-block', 'video', 'blockquote', 'clean']);\n\n    this.state = {\n      editorHtml: __ISMSIE__ ? '<p>&nbsp;</p>' : '',\n      files: []\n    };\n    this.reactQuillRef = null;\n    this.inputOpenImageRef = /*#__PURE__*/React.createRef();\n    this.inputOpenVideoRef = /*#__PURE__*/React.createRef();\n    this.inputOpenFileRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"ql-header\",\n          defaultValue: '',\n          onChange: e => e.persist(),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-italic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-strike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-insertImage\",\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-insertVideo\",\n          children: \"V\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-insertFile\",\n          children: \"F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-code-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-blockquote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ql-clean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: el => {\n          this.reactQuillRef = el;\n        },\n        theme: 'snow',\n        onChange: this.handleChange,\n        modules: this.modules,\n        formats: this.formats,\n        value: this.state.editorHtml,\n        placeholder: this.props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: this.inputOpenImageRef,\n        style: {\n          display: 'none'\n        },\n        onChange: this.insertImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        ref: this.inputOpenVideoRef,\n        style: {\n          display: 'none'\n        },\n        onChange: this.insertVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"*\",\n        ref: this.inputOpenFileRef,\n        style: {\n          display: 'none'\n        },\n        onChange: this.insertFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QuillEditor;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/form/QuilTest.jsx"],"names":["React","ReactQuill","Quill","axios","__ISMSIE__","navigator","userAgent","match","QuillClipboard","import","Clipboard","stringContent","el","document","createElement","innerHTML","getElementsByTagName","onPaste","e","clipboardData","window","pastedData","getData","urlMatches","length","preventDefault","forEach","link","get","then","payload","title","image","url","node","getMetaTagElements","getAttribute","rendered","range","quill","getSelection","position","index","pasteHTML","setSelection","catch","error","console","register","BlockEmbed","ImageBlot","create","value","imgTag","setAttribute","src","alt","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","className","PollBlot","id","QuillEditor","Component","constructor","props","html","log","setState","editorHtml","onEditorChange","state","inputOpenImageRef","current","click","inputOpenVideoRef","inputOpenFileRef","stopPropagation","currentTarget","files","file","formData","FormData","config","header","append","post","response","data","success","reactQuillRef","getEditor","focus","insertEmbed","fileName","_isMounted","onFilesChange","alert","syntax","toolbar","container","handlers","insertImage","imageHandler","insertVideo","videoHandler","insertFile","fileHandler","insertPoll","pollHandler","createRef","componentDidMount","componentWillUnmount","render","persist","handleChange","modules","formats","placeholder","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,KAArB,QAAkC,aAAlC;AACA,OAAO,iCAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAU,GAAGC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,IAAwC,IAAxC,GAA+C,KAAlE,C,CAEA;;;AAEA,MAAMC,cAAc,GAAGN,KAAK,CAACO,MAAN,CAAa,mBAAb,CAAvB;;AAEA,MAAMC,SAAN,SAAwBF,cAAxB,CAAuC;AAAA;AAAA;;AAAA,gDACfG,aAAD,IAAmB;AACtC,YAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAF,MAAAA,EAAE,CAACG,SAAH,GAAeJ,aAAf;AACA,aAAOC,EAAE,CAACI,oBAAH,CAAwB,MAAxB,CAAP;AACD,KALoC;AAAA;;AAOrC,QAAMC,OAAN,CAAcC,CAAd,EAAiB;AACf,QAAIC,aAAa,GAAGD,CAAC,CAACC,aAAF,IAAmBC,MAAM,CAACD,aAA9C;AACA,QAAIE,UAAU,GAAG,MAAMF,aAAa,CAACG,OAAd,CAAsB,MAAtB,CAAvB;AAEA,UAAMC,UAAU,GAAGF,UAAU,CAACd,KAAX,CAAiB,2BAAjB,KAAiD,EAApE;;AACA,QAAIgB,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACzBN,MAAAA,CAAC,CAACO,cAAF;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAoBC,IAAD,IAAU;AAC3BxB,QAAAA,KAAK,CACFyB,GADH,CACOD,IADP,EAEGE,IAFH,CAESC,OAAD,IAAa;AACjB;AACA,cAAIC,KAAJ,EAAWC,KAAX,EAAkBC,GAAlB;;AACA,eAAK,IAAIC,IAAT,IAAiB,KAAKC,kBAAL,CAAwBL,OAAxB,CAAjB,EAAmD;AACjD,gBAAII,IAAI,CAACE,YAAL,CAAkB,UAAlB,MAAkC,UAAtC,EAAkD;AAChDL,cAAAA,KAAK,GAAGG,IAAI,CAACE,YAAL,CAAkB,SAAlB,CAAR;AACD;;AACD,gBAAIF,IAAI,CAACE,YAAL,CAAkB,UAAlB,MAAkC,UAAtC,EAAkD;AAChDJ,cAAAA,KAAK,GAAGE,IAAI,CAACE,YAAL,CAAkB,SAAlB,CAAR;AACD;;AACD,gBAAIF,IAAI,CAACE,YAAL,CAAkB,UAAlB,MAAkC,QAAtC,EAAgD;AAC9CH,cAAAA,GAAG,GAAGC,IAAI,CAACE,YAAL,CAAkB,SAAlB,CAAN;AACD,aATgD,CAUjD;AACA;AACA;;AACD;;AAED,gBAAMC,QAAQ,GAAI,WAAUJ,GAAI,kCAAiCD,KAAM,QAAOD,KAAM,uBAAsBA,KAAM,mBAAhH;AAEA,cAAIO,KAAK,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAZ;AACA,cAAIC,QAAQ,GAAGH,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAiB,CAArC;AACA,eAAKH,KAAL,CAAWI,SAAX,CAAqBF,QAArB,EAA+BJ,QAA/B,EAAyC,QAAzC;AACA,eAAKE,KAAL,CAAWK,YAAX,CAAwBH,QAAQ,GAAGJ,QAAQ,CAACb,MAA5C;AACD,SA1BH,EA2BGqB,KA3BH,CA2BUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CA3BpB;AA4BD,OA7BD;AA8BD,KAhCD,MAgCO;AACL;AACA,YAAM7B,OAAN,CAAcC,CAAd;AACD;AACF;;AAhDoC;;AAkDvChB,KAAK,CAAC8C,QAAN,CAAe,mBAAf,EAAoCtC,SAApC,EAA+C,IAA/C;AAEA,MAAMuC,UAAU,GAAG/C,KAAK,CAACO,MAAN,CAAa,mBAAb,CAAnB;;AAEA,MAAMyC,SAAN,SAAwBD,UAAxB,CAAmC;AACjC,SAAOE,MAAP,CAAcC,KAAd,EAAqB;AACnB,UAAMC,MAAM,GAAG,MAAMF,MAAN,EAAf;AACAE,IAAAA,MAAM,CAACC,YAAP,CAAoB,KAApB,EAA2BF,KAAK,CAACG,GAAjC;AACAF,IAAAA,MAAM,CAACC,YAAP,CAAoB,KAApB,EAA2BF,KAAK,CAACI,GAAjC;AACAH,IAAAA,MAAM,CAACC,YAAP,CAAoB,OAApB,EAA6B,MAA7B;AACA,WAAOD,MAAP;AACD;;AAED,SAAOD,KAAP,CAAalB,IAAb,EAAmB;AACjB,WAAO;AAAEqB,MAAAA,GAAG,EAAErB,IAAI,CAACE,YAAL,CAAkB,KAAlB,CAAP;AAAiCoB,MAAAA,GAAG,EAAEtB,IAAI,CAACE,YAAL,CAAkB,KAAlB;AAAtC,KAAP;AACD;;AAXgC;;AAcnCc,SAAS,CAACO,QAAV,GAAqB,OAArB;AACAP,SAAS,CAACQ,OAAV,GAAoB,KAApB;AACAxD,KAAK,CAAC8C,QAAN,CAAeE,SAAf;;AAEA,MAAMS,SAAN,SAAwBV,UAAxB,CAAmC;AACjC,SAAOE,MAAP,CAAcC,KAAd,EAAqB;AACnB,QAAIA,KAAK,IAAIA,KAAK,CAACG,GAAnB,EAAwB;AACtB,YAAMK,QAAQ,GAAG,MAAMT,MAAN,EAAjB;AACAS,MAAAA,QAAQ,CAACN,YAAT,CAAsB,KAAtB,EAA6BF,KAAK,CAACG,GAAnC;AACAK,MAAAA,QAAQ,CAACN,YAAT,CAAsB,OAAtB,EAA+BF,KAAK,CAACrB,KAArC;AACA6B,MAAAA,QAAQ,CAACN,YAAT,CAAsB,OAAtB,EAA+B,MAA/B;AACAM,MAAAA,QAAQ,CAACN,YAAT,CAAsB,UAAtB,EAAkC,EAAlC;AAEA,aAAOM,QAAP;AACD,KARD,MAQO;AACL,YAAMC,SAAS,GAAGhD,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAlB;AACA+C,MAAAA,SAAS,CAACP,YAAV,CAAuB,KAAvB,EAA8BF,KAA9B;AACAS,MAAAA,SAAS,CAACP,YAAV,CAAuB,aAAvB,EAAsC,GAAtC;AACAO,MAAAA,SAAS,CAACP,YAAV,CAAuB,iBAAvB,EAA0C,IAA1C;AACAO,MAAAA,SAAS,CAACP,YAAV,CAAuB,OAAvB,EAAgC,MAAhC;AACA,aAAOO,SAAP;AACD;AACF;;AAED,SAAOT,KAAP,CAAalB,IAAb,EAAmB;AACjB,QAAIA,IAAI,CAACE,YAAL,CAAkB,OAAlB,CAAJ,EAAgC;AAC9B,aAAO;AAAEmB,QAAAA,GAAG,EAAErB,IAAI,CAACE,YAAL,CAAkB,KAAlB,CAAP;AAAiCoB,QAAAA,GAAG,EAAEtB,IAAI,CAACE,YAAL,CAAkB,OAAlB;AAAtC,OAAP;AACD,KAFD,MAEO;AACL,aAAOF,IAAI,CAACE,YAAL,CAAkB,KAAlB,CAAP;AACD,KALgB,CAMjB;;AACD;;AA3BgC;;AA8BnCuB,SAAS,CAACF,QAAV,GAAqB,OAArB;AACAE,SAAS,CAACD,OAAV,GAAoB,OAApB;AACAxD,KAAK,CAAC8C,QAAN,CAAeW,SAAf;;AAEA,MAAMG,QAAN,SAAuBb,UAAvB,CAAkC;AAChC,SAAOE,MAAP,CAAcC,KAAd,EAAqB;AACnB,UAAMW,SAAS,GAAGlD,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAiD,IAAAA,SAAS,CAACC,SAAV,GAAsB,SAAtB;AAEA,UAAMC,IAAI,GAAGpD,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb,CAJmB,CAKnB;;AACAmD,IAAAA,IAAI,CAACD,SAAL,GAAiBZ,KAAjB;AAEA,UAAMc,OAAO,GAAGrD,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACAoD,IAAAA,OAAO,CAACZ,YAAR,CAAqB,MAArB,EAA6BF,KAA7B;AACAc,IAAAA,OAAO,CAACZ,YAAR,CAAqB,QAArB,EAA+B,QAA/B;AACAY,IAAAA,OAAO,CAACZ,YAAR,CAAqB,WAArB,EAAkC,sBAAlC;AACAY,IAAAA,OAAO,CAACC,WAAR,CAAoBF,IAApB,EAZmB,CAanB;;AAEA,UAAM/B,IAAI,GAAG,MAAMiB,MAAN,EAAb;AACAjB,IAAAA,IAAI,CAACiC,WAAL,CAAiBJ,SAAjB;AACA7B,IAAAA,IAAI,CAACiC,WAAL,CAAiBD,OAAjB;AAEA,WAAOhC,IAAP;AACD;;AAED,SAAOkB,KAAP,CAAalB,IAAb,EAAmB;AACjB,UAAMgC,OAAO,GAAGhC,IAAI,CAACkC,aAAL,CAAmB,GAAnB,CAAhB;AACA,WAAOF,OAAO,CAAC9B,YAAR,CAAqB,MAArB,CAAP;AACD;;AA1B+B;;AA6BlC0B,QAAQ,CAACL,QAAT,GAAoB,MAApB;AACAK,QAAQ,CAACJ,OAAT,GAAmB,GAAnB;AACAI,QAAQ,CAACO,SAAT,GAAqB,iBAArB;AACAnE,KAAK,CAAC8C,QAAN,CAAec,QAAf;;AAEA,MAAMQ,QAAN,SAAuBrB,UAAvB,CAAkC;AAChC,SAAOE,MAAP,CAAcC,KAAd,EAAqB;AACnB,UAAMW,SAAS,GAAGlD,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAiD,IAAAA,SAAS,CAACC,SAAV,GAAsB,OAAtB;AAEA,UAAMC,IAAI,GAAGpD,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAmD,IAAAA,IAAI,CAACD,SAAL,GAAiBZ,KAAK,CAACrB,KAAvB;AAEA,UAAMG,IAAI,GAAG,MAAMiB,MAAN,EAAb;AACAjB,IAAAA,IAAI,CAACoB,YAAL,CAAkB,IAAlB,EAAwBF,KAAK,CAACmB,EAA9B;AACArC,IAAAA,IAAI,CAACiC,WAAL,CAAiBJ,SAAjB;AACA7B,IAAAA,IAAI,CAACiC,WAAL,CAAiBF,IAAjB;AAEA,WAAO/B,IAAP;AACD;;AAED,SAAOkB,KAAP,CAAalB,IAAb,EAAmB;AACjB,UAAMqC,EAAE,GAAGrC,IAAI,CAACE,YAAL,CAAkB,IAAlB,CAAX;AACA,UAAM6B,IAAI,GAAG/B,IAAI,CAACkC,aAAL,CAAmB,GAAnB,CAAb;AACA,UAAMrC,KAAK,GAAGkC,IAAI,CAACD,SAAnB;AACA,WAAO;AAAEO,MAAAA,EAAF;AAAMxC,MAAAA;AAAN,KAAP;AACD;;AArB+B;;AAwBlCuC,QAAQ,CAACb,QAAT,GAAoB,MAApB;AACAa,QAAQ,CAACZ,OAAT,GAAmB,GAAnB;AACAY,QAAQ,CAACD,SAAT,GAAqB,iBAArB;AACAnE,KAAK,CAAC8C,QAAN,CAAesB,QAAf;;AAEA,MAAME,WAAN,SAA0BxE,KAAK,CAACyE,SAAhC,CAA0C;AAQxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,0CAuBHC,IAAD,IAAU;AACvB7B,MAAAA,OAAO,CAAC8B,GAAR,CAAY,MAAZ,EAAoBD,IAApB,EADuB,CAEvB;AACA;AACA;AACA;;AAEA,WAAKE,QAAL,CACE;AACEC,QAAAA,UAAU,EAAEH;AADd,OADF,EAIE,MAAM;AACJ,aAAKD,KAAL,CAAWK,cAAX,CAA0B,KAAKC,KAAL,CAAWF,UAArC;AACD,OANH;AAQD,KAtCkB;;AAAA,0CAyCJ,MAAM;AACnB,WAAKG,iBAAL,CAAuBC,OAAvB,CAA+BC,KAA/B;AACD,KA3CkB;;AAAA,0CA6CJ,MAAM;AACnB,WAAKC,iBAAL,CAAuBF,OAAvB,CAA+BC,KAA/B;AACD,KA/CkB;;AAAA,yCAiDL,MAAM;AAClB,WAAKE,gBAAL,CAAsBH,OAAtB,CAA8BC,KAA9B;AACD,KAnDkB;;AAAA,yCAqDJlE,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACqE,eAAF;AACArE,MAAAA,CAAC,CAACO,cAAF;;AAEA,UACEP,CAAC,CAACsE,aAAF,IACAtE,CAAC,CAACsE,aAAF,CAAgBC,KADhB,IAEAvE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsBjE,MAAtB,GAA+B,CAHjC,EAIE;AACA,cAAMkE,IAAI,GAAGxE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAb;AAEA,YAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,cAAMC,MAAM,GAAG;AACbC,UAAAA,MAAM,EAAE;AAAE,4BAAgB;AAAlB;AADK,SAAf;AAGAH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AAEAvF,QAAAA,KAAK,CAAC6F,IAAN,CAAW,uBAAX,EAAoCL,QAApC,EAA8CE,MAA9C,EAAsDhE,IAAtD,CAA4DoE,QAAD,IAAc;AACvE,cAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,kBAAM5D,KAAK,GAAG,KAAK6D,aAAL,CAAmBC,SAAnB,EAAd;AACA9D,YAAAA,KAAK,CAAC+D,KAAN;AAEA,gBAAIhE,KAAK,GAAGC,KAAK,CAACC,YAAN,EAAZ;AACA,gBAAIC,QAAQ,GAAGH,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAiB,CAArC,CALyB,CAOzB;AACA;;AACAH,YAAAA,KAAK,CAACgE,WAAN,CAAkB9D,QAAlB,EAA4B,OAA5B,EAAqC;AACnCc,cAAAA,GAAG,EAAE,2BAA2B0C,QAAQ,CAACC,IAAT,CAAcjE,GADX;AAEnCuB,cAAAA,GAAG,EAAEyC,QAAQ,CAACC,IAAT,CAAcM;AAFgB,aAArC;AAIAjE,YAAAA,KAAK,CAACK,YAAN,CAAmBH,QAAQ,GAAG,CAA9B;;AAEA,gBAAI,KAAKgE,UAAT,EAAqB;AACnB,mBAAK3B,QAAL,CACE;AACEW,gBAAAA,KAAK,EAAE,CAAC,GAAG,KAAKR,KAAL,CAAWQ,KAAf,EAAsBC,IAAtB;AADT,eADF,EAIE,MAAM;AACJ,qBAAKf,KAAL,CAAW+B,aAAX,CAAyB,KAAKzB,KAAL,CAAWQ,KAApC;AACD,eANH;AAQD;AACF,WAzBD,MAyBO;AACL,mBAAOkB,KAAK,CAAC,uBAAD,CAAZ;AACD;AACF,SA7BD;AA8BD;AACF,KArGkB;;AAAA,yCAuGJzF,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACqE,eAAF;AACArE,MAAAA,CAAC,CAACO,cAAF;;AAEA,UACEP,CAAC,CAACsE,aAAF,IACAtE,CAAC,CAACsE,aAAF,CAAgBC,KADhB,IAEAvE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsBjE,MAAtB,GAA+B,CAHjC,EAIE;AACA,cAAMkE,IAAI,GAAGxE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAb;AAEA,YAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,cAAMC,MAAM,GAAG;AACbC,UAAAA,MAAM,EAAE;AAAE,4BAAgB;AAAlB;AADK,SAAf;AAGAH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AAEAvF,QAAAA,KAAK,CAAC6F,IAAN,CAAW,uBAAX,EAAoCL,QAApC,EAA8CE,MAA9C,EAAsDhE,IAAtD,CAA4DoE,QAAD,IAAc;AACvE,cAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,kBAAM5D,KAAK,GAAG,KAAK6D,aAAL,CAAmBC,SAAnB,EAAd;AACA9D,YAAAA,KAAK,CAAC+D,KAAN;AAEA,gBAAIhE,KAAK,GAAGC,KAAK,CAACC,YAAN,EAAZ;AACA,gBAAIC,QAAQ,GAAGH,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAiB,CAArC;AACAH,YAAAA,KAAK,CAACgE,WAAN,CAAkB9D,QAAlB,EAA4B,OAA5B,EAAqC;AACnCc,cAAAA,GAAG,EAAE,2BAA2B0C,QAAQ,CAACC,IAAT,CAAcjE,GADX;AAEnCF,cAAAA,KAAK,EAAEkE,QAAQ,CAACC,IAAT,CAAcM;AAFc,aAArC;AAIAjE,YAAAA,KAAK,CAACK,YAAN,CAAmBH,QAAQ,GAAG,CAA9B;;AAEA,gBAAI,KAAKgE,UAAT,EAAqB;AACnB,mBAAK3B,QAAL,CACE;AACEW,gBAAAA,KAAK,EAAE,CAAC,GAAG,KAAKR,KAAL,CAAWQ,KAAf,EAAsBC,IAAtB;AADT,eADF,EAIE,MAAM;AACJ,qBAAKf,KAAL,CAAW+B,aAAX,CAAyB,KAAKzB,KAAL,CAAWQ,KAApC;AACD,eANH;AAQD;AACF,WAtBD,MAsBO;AACL,mBAAOkB,KAAK,CAAC,uBAAD,CAAZ;AACD;AACF,SA1BD;AA2BD;AACF,KApJkB;;AAAA,wCAsJLzF,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACqE,eAAF;AACArE,MAAAA,CAAC,CAACO,cAAF;;AAEA,UACEP,CAAC,CAACsE,aAAF,IACAtE,CAAC,CAACsE,aAAF,CAAgBC,KADhB,IAEAvE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsBjE,MAAtB,GAA+B,CAHjC,EAIE;AACA,cAAMkE,IAAI,GAAGxE,CAAC,CAACsE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAb;AACA1C,QAAAA,OAAO,CAAC8B,GAAR,CAAYa,IAAZ;AAEA,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,cAAMC,MAAM,GAAG;AACbC,UAAAA,MAAM,EAAE;AAAE,4BAAgB;AAAlB;AADK,SAAf;AAGAH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AAEAvF,QAAAA,KAAK,CAAC6F,IAAN,CAAW,uBAAX,EAAoCL,QAApC,EAA8CE,MAA9C,EAAsDhE,IAAtD,CAA4DoE,QAAD,IAAc;AACvE,cAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,kBAAM5D,KAAK,GAAG,KAAK6D,aAAL,CAAmBC,SAAnB,EAAd;AACA9D,YAAAA,KAAK,CAAC+D,KAAN;AAEA,gBAAIhE,KAAK,GAAGC,KAAK,CAACC,YAAN,EAAZ;AACA,gBAAIC,QAAQ,GAAGH,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAiB,CAArC;AACAH,YAAAA,KAAK,CAACgE,WAAN,CAAkB9D,QAAlB,EAA4B,MAA5B,EAAoCwD,QAAQ,CAACC,IAAT,CAAcM,QAAlD;AACAjE,YAAAA,KAAK,CAACK,YAAN,CAAmBH,QAAQ,GAAG,CAA9B;;AAEA,gBAAI,KAAKgE,UAAT,EAAqB;AACnB,mBAAK3B,QAAL,CACE;AACEW,gBAAAA,KAAK,EAAE,CAAC,GAAG,KAAKR,KAAL,CAAWQ,KAAf,EAAsBC,IAAtB;AADT,eADF,EAIE,MAAM;AACJ,qBAAKf,KAAL,CAAW+B,aAAX,CAAyB,KAAKzB,KAAL,CAAWQ,KAApC;AACD,eANH;AAQD;AACF;AACF,SArBD;AAsBD;AACF,KA/LkB;;AAAA,qCA+PT;AACRmB,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,UADJ;AAEP;AACAC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,WAAW,EAAE,KAAKC,YADV;AAERC,UAAAA,WAAW,EAAE,KAAKC,YAFV;AAGRC,UAAAA,UAAU,EAAE,KAAKC,WAHT;AAIRC,UAAAA,UAAU,EAAE,KAAKC;AAJT;AAHH;AAFD,KA/PS;;AAAA,qCA6QT,CACR,QADQ,EAER,MAFQ,EAGR,QAHQ,EAIR,WAJQ,EAKR,QALQ,EAMR,OANQ,EAOR,OAPQ,EAQR,MARQ,EASR,MATQ,EAUR,YAVQ,EAWR,OAXQ,EAYR,YAZQ,EAaR,OAbQ,CA7QS;;AAGjB,SAAKtC,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE3E,UAAU,GAAG,eAAH,GAAqB,EADhC;AAEXqF,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKW,aAAL,GAAqB,IAArB;AAEA,SAAKlB,iBAAL,gBAAyBlF,KAAK,CAACwH,SAAN,EAAzB;AACA,SAAKnC,iBAAL,gBAAyBrF,KAAK,CAACwH,SAAN,EAAzB;AACA,SAAKlC,gBAAL,gBAAwBtF,KAAK,CAACwH,SAAN,EAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,UAAL,GAAkB,IAAlB;AACD;;AAEDiB,EAAAA,oBAAoB,GAAG;AACrB,SAAKjB,UAAL,GAAkB,KAAlB;AACD;;AA4KDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,YAAY,EAAE,EAFhB;AAGE,UAAA,QAAQ,EAAGzG,CAAD,IAAOA,CAAC,CAAC0G,OAAF,EAHnB;AAAA,kCAKE;AAAQ,YAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAQ,YAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAQ,YAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmBE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBApBF,eAqBE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE,QAAC,UAAD;AACE,QAAA,GAAG,EAAGhH,EAAD,IAAQ;AACX,eAAKwF,aAAL,GAAqBxF,EAArB;AACD,SAHH;AAIE,QAAA,KAAK,EAAE,MAJT;AAKE,QAAA,QAAQ,EAAE,KAAKiH,YALjB;AAME,QAAA,OAAO,EAAE,KAAKC,OANhB;AAOE,QAAA,OAAO,EAAE,KAAKC,OAPhB;AAQE,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWF,UARpB;AASE,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWqD;AAT1B;AAAA;AAAA;AAAA;AAAA,cAxBF,eAmCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,GAAG,EAAE,KAAK9C,iBAHZ;AAIE,QAAA,KAAK,EAAE;AAAE+C,UAAAA,OAAO,EAAE;AAAX,SAJT;AAKE,QAAA,QAAQ,EAAE,KAAKjB;AALjB;AAAA;AAAA;AAAA;AAAA,cAnCF,eA0CE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,GAAG,EAAE,KAAK3B,iBAHZ;AAIE,QAAA,KAAK,EAAE;AAAE4C,UAAAA,OAAO,EAAE;AAAX,SAJT;AAKE,QAAA,QAAQ,EAAE,KAAKf;AALjB;AAAA;AAAA;AAAA;AAAA,cA1CF,eAiDE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAC,GAFT;AAGE,QAAA,GAAG,EAAE,KAAK5B,gBAHZ;AAIE,QAAA,KAAK,EAAE;AAAE2C,UAAAA,OAAO,EAAE;AAAX,SAJT;AAKE,QAAA,QAAQ,EAAE,KAAKb;AALjB;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2DD;;AArQuC;;AAsS1C,eAAe5C,WAAf","sourcesContent":["import React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport axios from 'axios';\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\n// Quill.register('modules/clipboard', PlainClipboard, true);\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n  getMetaTagElements = (stringContent) => {\n    const el = document.createElement('div');\n    el.innerHTML = stringContent;\n    return el.getElementsByTagName('meta');\n  };\n\n  async onPaste(e) {\n    let clipboardData = e.clipboardData || window.clipboardData;\n    let pastedData = await clipboardData.getData('Text');\n\n    const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n    if (urlMatches.length > 0) {\n      e.preventDefault();\n      urlMatches.forEach((link) => {\n        axios\n          .get(link)\n          .then((payload) => {\n            // let title, image, url, description;\n            let title, image, url;\n            for (let node of this.getMetaTagElements(payload)) {\n              if (node.getAttribute('property') === 'og:title') {\n                title = node.getAttribute('content');\n              }\n              if (node.getAttribute('property') === 'og:image') {\n                image = node.getAttribute('content');\n              }\n              if (node.getAttribute('property') === 'og:url') {\n                url = node.getAttribute('content');\n              }\n              // if (node.getAttribute(\"property\") === \"og:description\") {\n              //     description = node.getAttribute(\"content\");\n              // }\n            }\n\n            const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n            let range = this.quill.getSelection();\n            let position = range ? range.index : 0;\n            this.quill.pasteHTML(position, rendered, 'silent');\n            this.quill.setSelection(position + rendered.length);\n          })\n          .catch((error) => console.error(error));\n      });\n    } else {\n      //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다.\n      super.onPaste(e);\n    }\n  }\n}\nQuill.register('modules/clipboard', Clipboard, true);\n\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n  static create(value) {\n    const imgTag = super.create();\n    imgTag.setAttribute('src', value.src);\n    imgTag.setAttribute('alt', value.alt);\n    imgTag.setAttribute('width', '100%');\n    return imgTag;\n  }\n\n  static value(node) {\n    return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\n  }\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n  static create(value) {\n    if (value && value.src) {\n      const videoTag = super.create();\n      videoTag.setAttribute('src', value.src);\n      videoTag.setAttribute('title', value.title);\n      videoTag.setAttribute('width', '100%');\n      videoTag.setAttribute('controls', '');\n\n      return videoTag;\n    } else {\n      const iframeTag = document.createElement('iframe');\n      iframeTag.setAttribute('src', value);\n      iframeTag.setAttribute('frameborder', '0');\n      iframeTag.setAttribute('allowfullscreen', true);\n      iframeTag.setAttribute('width', '100%');\n      return iframeTag;\n    }\n  }\n\n  static value(node) {\n    if (node.getAttribute('title')) {\n      return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n    } else {\n      return node.getAttribute('src');\n    }\n    // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n  }\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = '첨부파일 - ';\n\n    const bTag = document.createElement('b');\n    //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n    bTag.innerText = value;\n\n    const linkTag = document.createElement('a');\n    linkTag.setAttribute('href', value);\n    linkTag.setAttribute('target', '_blank');\n    linkTag.setAttribute('className', 'file-link-inner-post');\n    linkTag.appendChild(bTag);\n    //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n    const node = super.create();\n    node.appendChild(prefixTag);\n    node.appendChild(linkTag);\n\n    return node;\n  }\n\n  static value(node) {\n    const linkTag = node.querySelector('a');\n    return linkTag.getAttribute('href');\n  }\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = '투표 - ';\n\n    const bTag = document.createElement('b');\n    bTag.innerText = value.title;\n\n    const node = super.create();\n    node.setAttribute('id', value.id);\n    node.appendChild(prefixTag);\n    node.appendChild(bTag);\n\n    return node;\n  }\n\n  static value(node) {\n    const id = node.getAttribute('id');\n    const bTag = node.querySelector('b');\n    const title = bTag.innerText;\n    return { id, title };\n  }\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n  bandId;\n  placeholder;\n  onEditorChange;\n  onFilesChange;\n  onPollsChange;\n  _isMounted;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorHtml: __ISMSIE__ ? '<p>&nbsp;</p>' : '',\n      files: [],\n    };\n\n    this.reactQuillRef = null;\n\n    this.inputOpenImageRef = React.createRef();\n    this.inputOpenVideoRef = React.createRef();\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleChange = (html) => {\n    console.log('html', html);\n    // https://youtu.be/BbR-QCoKngE\n    // https://www.youtube.com/embed/ZwKhufmMxko\n    // https://tv.naver.com/v/9176888\n    // renderToStaticMarkup(ReactHtmlParser(html, options));\n\n    this.setState(\n      {\n        editorHtml: html,\n      },\n      () => {\n        this.props.onEditorChange(this.state.editorHtml);\n      }\n    );\n  };\n\n  // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다.\n  imageHandler = () => {\n    this.inputOpenImageRef.current.click();\n  };\n\n  videoHandler = () => {\n    this.inputOpenVideoRef.current.click();\n  };\n\n  fileHandler = () => {\n    this.inputOpenFileRef.current.click();\n  };\n\n  insertImage = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (\n      e.currentTarget &&\n      e.currentTarget.files &&\n      e.currentTarget.files.length > 0\n    ) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' },\n      };\n      formData.append('file', file);\n\n      axios.post('/api/blog/uploadfiles', formData, config).then((response) => {\n        if (response.data.success) {\n          const quill = this.reactQuillRef.getEditor();\n          quill.focus();\n\n          let range = quill.getSelection();\n          let position = range ? range.index : 0;\n\n          //먼저 노드 서버에다가 이미지를 넣은 다음에   여기 아래에 src에다가 그걸 넣으면 그게\n          //이미지 블롯으로 가서  크리에이트가 이미지를 형성 하며 그걸 발류에서     src 랑 alt 를 가져간후에  editorHTML에 다가 넣는다.\n          quill.insertEmbed(position, 'image', {\n            src: 'http://localhost:5000/' + response.data.url,\n            alt: response.data.fileName,\n          });\n          quill.setSelection(position + 1);\n\n          if (this._isMounted) {\n            this.setState(\n              {\n                files: [...this.state.files, file],\n              },\n              () => {\n                this.props.onFilesChange(this.state.files);\n              }\n            );\n          }\n        } else {\n          return alert('failed to upload file');\n        }\n      });\n    }\n  };\n\n  insertVideo = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (\n      e.currentTarget &&\n      e.currentTarget.files &&\n      e.currentTarget.files.length > 0\n    ) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' },\n      };\n      formData.append('file', file);\n\n      axios.post('/api/blog/uploadfiles', formData, config).then((response) => {\n        if (response.data.success) {\n          const quill = this.reactQuillRef.getEditor();\n          quill.focus();\n\n          let range = quill.getSelection();\n          let position = range ? range.index : 0;\n          quill.insertEmbed(position, 'video', {\n            src: 'http://localhost:5000/' + response.data.url,\n            title: response.data.fileName,\n          });\n          quill.setSelection(position + 1);\n\n          if (this._isMounted) {\n            this.setState(\n              {\n                files: [...this.state.files, file],\n              },\n              () => {\n                this.props.onFilesChange(this.state.files);\n              }\n            );\n          }\n        } else {\n          return alert('failed to upload file');\n        }\n      });\n    }\n  };\n\n  insertFile = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (\n      e.currentTarget &&\n      e.currentTarget.files &&\n      e.currentTarget.files.length > 0\n    ) {\n      const file = e.currentTarget.files[0];\n      console.log(file);\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' },\n      };\n      formData.append('file', file);\n\n      axios.post('/api/blog/uploadfiles', formData, config).then((response) => {\n        if (response.data.success) {\n          const quill = this.reactQuillRef.getEditor();\n          quill.focus();\n\n          let range = quill.getSelection();\n          let position = range ? range.index : 0;\n          quill.insertEmbed(position, 'file', response.data.fileName);\n          quill.setSelection(position + 1);\n\n          if (this._isMounted) {\n            this.setState(\n              {\n                files: [...this.state.files, file],\n              },\n              () => {\n                this.props.onFilesChange(this.state.files);\n              }\n            );\n          }\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"toolbar\">\n          <select\n            className=\"ql-header\"\n            defaultValue={''}\n            onChange={(e) => e.persist()}\n          >\n            <option value=\"1\" />\n            <option value=\"2\" />\n            <option value=\"\" />\n          </select>\n          <button className=\"ql-bold\" />\n          <button className=\"ql-italic\" />\n          <button className=\"ql-underline\" />\n          <button className=\"ql-strike\" />\n          <button className=\"ql-insertImage\">I</button>\n          <button className=\"ql-insertVideo\">V</button>\n          <button className=\"ql-insertFile\">F</button>\n          <button className=\"ql-link\" />\n          <button className=\"ql-code-block\" />\n          <button className=\"ql-video\" />\n          <button className=\"ql-blockquote\" />\n          <button className=\"ql-clean\" />\n        </div>\n        <ReactQuill\n          ref={(el) => {\n            this.reactQuillRef = el;\n          }}\n          theme={'snow'}\n          onChange={this.handleChange}\n          modules={this.modules}\n          formats={this.formats}\n          value={this.state.editorHtml}\n          placeholder={this.props.placeholder}\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          ref={this.inputOpenImageRef}\n          style={{ display: 'none' }}\n          onChange={this.insertImage}\n        />\n        <input\n          type=\"file\"\n          accept=\"video/*\"\n          ref={this.inputOpenVideoRef}\n          style={{ display: 'none' }}\n          onChange={this.insertVideo}\n        />\n        <input\n          type=\"file\"\n          accept=\"*\"\n          ref={this.inputOpenFileRef}\n          style={{ display: 'none' }}\n          onChange={this.insertFile}\n        />\n      </div>\n    );\n  }\n\n  modules = {\n    syntax: true,\n    toolbar: {\n      container: '#toolbar',\n      //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다.\n      handlers: {\n        insertImage: this.imageHandler,\n        insertVideo: this.videoHandler,\n        insertFile: this.fileHandler,\n        insertPoll: this.pollHandler,\n      },\n    },\n  };\n\n  formats = [\n    'header',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'image',\n    'video',\n    'file',\n    'link',\n    'code-block',\n    'video',\n    'blockquote',\n    'clean',\n  ];\n}\n\nexport default QuillEditor;\n"]},"metadata":{},"sourceType":"module"}