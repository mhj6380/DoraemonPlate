{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/form/QuilTest.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; // import './styles.css';\n\nconst CustomHeart = () => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: \"\\u2665\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 27\n}, this);\n\nfunction insertHeart() {\n  const cursorPosition = this.quill.getSelection().index;\n  this.quill.insertText(cursorPosition, 'â™¥');\n  this.quill.setSelection(cursorPosition + 1);\n}\n/*\n * Custom toolbar component including the custom heart button and dropdowns\n */\n\n\nconst CustomToolbar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  id: \"toolbar\",\n  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ql-font\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"arial\",\n      selected: true,\n      children: \"Arial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"comic-sans\",\n      children: \"Comic Sans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"courier-new\",\n      children: \"Courier New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"georgia\",\n      children: \"Georgia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"helvetica\",\n      children: \"Helvetica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"lucida\",\n      children: \"Lucida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ql-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"extra-small\",\n      children: \"Size 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"small\",\n      children: \"Size 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"medium\",\n      selected: true,\n      children: \"Size 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"large\",\n      children: \"Size 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ql-align\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ql-color\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ql-background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"ql-clean\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"ql-insertHeart\",\n    children: /*#__PURE__*/_jsxDEV(CustomHeart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this); // Add sizes to whitelist and register them\n\n\nconst Size = Quill.import('formats/size');\nSize.whitelist = ['extra-small', 'small', 'medium', 'large'];\nQuill.register(Size, true); // Add fonts to whitelist and register them\n\nconst Font = Quill.import('formats/font');\nFont.whitelist = ['arial', 'comic-sans', 'courier-new', 'georgia', 'helvetica', 'lucida'];\nQuill.register(Font, true);\n/*\n * Editor component with custom toolbar and content containers\n */\n\nclass Editor extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      editorHtml: ''\n    });\n\n    _defineProperty(this, \"handleChange\", html => {\n      this.setState({\n        editorHtml: html\n      });\n    });\n  }\n\n  // static formats = [\n  //   'header',\n  //   'font',\n  //   'size',\n  //   'bold',\n  //   'italic',\n  //   'underline',\n  //   'strike',\n  //   'blockquote',\n  //   'list',\n  //   'bullet',\n  //   'indent',\n  //   'link',\n  //   'image',\n  //   'color',\n  // ];\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      children: [/*#__PURE__*/_jsxDEV(CustomToolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: this.state.editorHtml,\n        onChange: this.handleChange,\n        modules: Editor.modules // formats={Editor.formats}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n_defineProperty(Editor, \"modules\", {\n  toolbar: {\n    container: '#toolbar',\n    handlers: {\n      insertHeart: insertHeart\n    }\n  }\n});\n\nexport default Editor;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/form/QuilTest.tsx"],"names":["React","ReactQuill","Quill","CustomHeart","insertHeart","cursorPosition","quill","getSelection","index","insertText","setSelection","CustomToolbar","Size","import","whitelist","register","Font","Editor","Component","editorHtml","html","setState","render","state","handleChange","modules","toolbar","container","handlers"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,IAAqBC,KAArB,QAAkC,aAAlC;AACA,OAAO,iCAAP,C,CACA;;AAEA,MAAMC,WAAW,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,YAAX,GAA0BC,KAAjD;AACA,OAAKF,KAAL,CAAWG,UAAX,CAAsBJ,cAAtB,EAAsC,GAAtC;AACA,OAAKC,KAAL,CAAWI,YAAX,CAAwBL,cAAc,GAAG,CAAzC;AACD;AAED;AACA;AACA;;;AACA,MAAMM,aAAa,GAAG,mBACpB;AAAK,EAAA,EAAE,EAAC,SAAR;AAAA,0BACE;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAWE;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,eAmBE;AAAQ,IAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,UAnBF,eAoBE;AAAQ,IAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,UApBF,eAqBE;AAAQ,IAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,UArBF,eAsBE;AAAQ,IAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,UAtBF,eAuBE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CA8BA;;;AACA,MAAMC,IAAI,GAAGV,KAAK,CAACW,MAAN,CAAa,cAAb,CAAb;AACAD,IAAI,CAACE,SAAL,GAAiB,CAAC,aAAD,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,OAAnC,CAAjB;AACAZ,KAAK,CAACa,QAAN,CAAeH,IAAf,EAAqB,IAArB,E,CAEA;;AACA,MAAMI,IAAI,GAAGd,KAAK,CAACW,MAAN,CAAa,cAAb,CAAb;AACAG,IAAI,CAACF,SAAL,GAAiB,CACf,OADe,EAEf,YAFe,EAGf,aAHe,EAIf,SAJe,EAKf,WALe,EAMf,QANe,CAAjB;AAQAZ,KAAK,CAACa,QAAN,CAAeC,IAAf,EAAqB,IAArB;AAEA;AACA;AACA;;AACA,MAAMC,MAAN,SAAqBjB,KAAK,CAACkB,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD2B;;AAAA,0CAGnBC,IAAD,IAAU;AACvB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAEC;AAAd,OAAd;AACD,KALkC;AAAA;;AAgBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,UADpB;AAEE,QAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,QAAA,OAAO,EAAEP,MAAM,CAACQ,OAHlB,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA7CkC;;gBAA/BR,M,aAOa;AACfS,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,UADJ;AAEPC,IAAAA,QAAQ,EAAE;AACRxB,MAAAA,WAAW,EAAEA;AADL;AAFH;AADM,C;;AAyCnB,eAAea,MAAf","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n// import './styles.css';\n\nconst CustomHeart = () => <span>â™¥</span>;\n\nfunction insertHeart() {\n  const cursorPosition = this.quill.getSelection().index;\n  this.quill.insertText(cursorPosition, 'â™¥');\n  this.quill.setSelection(cursorPosition + 1);\n}\n\n/*\n * Custom toolbar component including the custom heart button and dropdowns\n */\nconst CustomToolbar = () => (\n  <div id=\"toolbar\">\n    <select className=\"ql-font\">\n      <option value=\"arial\" selected>\n        Arial\n      </option>\n      <option value=\"comic-sans\">Comic Sans</option>\n      <option value=\"courier-new\">Courier New</option>\n      <option value=\"georgia\">Georgia</option>\n      <option value=\"helvetica\">Helvetica</option>\n      <option value=\"lucida\">Lucida</option>\n    </select>\n    <select className=\"ql-size\">\n      <option value=\"extra-small\">Size 1</option>\n      <option value=\"small\">Size 2</option>\n      <option value=\"medium\" selected>\n        Size 3\n      </option>\n      <option value=\"large\">Size 4</option>\n    </select>\n    <select className=\"ql-align\" />\n    <select className=\"ql-color\" />\n    <select className=\"ql-background\" />\n    <button className=\"ql-clean\" />\n    <button className=\"ql-insertHeart\">\n      <CustomHeart />\n    </button>\n  </div>\n);\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import('formats/size');\nSize.whitelist = ['extra-small', 'small', 'medium', 'large'];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import('formats/font');\nFont.whitelist = [\n  'arial',\n  'comic-sans',\n  'courier-new',\n  'georgia',\n  'helvetica',\n  'lucida',\n];\nQuill.register(Font, true);\n\n/*\n * Editor component with custom toolbar and content containers\n */\nclass Editor extends React.Component {\n  state = { editorHtml: '' };\n\n  handleChange = (html) => {\n    this.setState({ editorHtml: html });\n  };\n\n  static modules = {\n    toolbar: {\n      container: '#toolbar',\n      handlers: {\n        insertHeart: insertHeart,\n      },\n    },\n  };\n\n  // static formats = [\n  //   'header',\n  //   'font',\n  //   'size',\n  //   'bold',\n  //   'italic',\n  //   'underline',\n  //   'strike',\n  //   'blockquote',\n  //   'list',\n  //   'bullet',\n  //   'indent',\n  //   'link',\n  //   'image',\n  //   'color',\n  // ];\n\n  render() {\n    return (\n      <div className=\"text-editor\">\n        <CustomToolbar />\n        <ReactQuill\n          value={this.state.editorHtml}\n          onChange={this.handleChange}\n          modules={Editor.modules}\n          // formats={Editor.formats}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}