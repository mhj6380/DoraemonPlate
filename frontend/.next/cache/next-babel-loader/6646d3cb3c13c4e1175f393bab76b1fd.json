{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _defineProperty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/form/Test.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styled from \"styled-components\";\nimport { Formik, Field, Form, useField } from \"formik\";\nimport { TextField, Button, Checkbox, FormControlLabel, Radio } from \"@material-ui/core\";\nvar TestWrapper = styled.div.withConfig({\n  displayName: \"Test__TestWrapper\",\n  componentId: \"wtkhl6-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = TestWrapper;\n\nvar LabeledRadio = function LabeledRadio(_ref) {\n  _s();\n\n  var label = _ref.label,\n      rest = _objectWithoutProperties(_ref, [\"label\"]);\n\n  var _useField = useField(rest),\n      _useField2 = _slicedToArray(_useField, 1),\n      field = _useField2[0];\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, _objectSpread({\n    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 32\n    }, _this),\n    label: label\n  }, field), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LabeledRadio, \"a/nAt62oW3UtLpmBMoZCsHTwzyU=\", false, function () {\n  return [useField];\n});\n\n_c2 = LabeledRadio;\n\nvar LabeledCheckbox = function LabeledCheckbox(_ref2) {\n  _s2();\n\n  var label = _ref2.label,\n      rest = _objectWithoutProperties(_ref2, [\"label\"]);\n\n  var _useField3 = useField(rest),\n      _useField4 = _slicedToArray(_useField3, 1),\n      field = _useField4[0];\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, _objectSpread({\n    control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 32\n    }, _this),\n    label: label\n  }, field), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(LabeledCheckbox, \"a/nAt62oW3UtLpmBMoZCsHTwzyU=\", false, function () {\n  return [useField];\n});\n\n_c3 = LabeledCheckbox;\n\nvar MyTextField = function MyTextField(_ref3) {\n  _s3();\n\n  var placeholder = _ref3.placeholder,\n      rest = _objectWithoutProperties(_ref3, [\"placeholder\"]);\n\n  var _useField5 = useField(rest),\n      _useField6 = _slicedToArray(_useField5, 2),\n      field = _useField6[0],\n      meta = _useField6[1];\n\n  var errorText = meta.error && meta.touched ? meta.error : \"\";\n  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n    placeholder: placeholder\n  }, field), {}, {\n    helperText: errorText,\n    error: !!errorText\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s3(MyTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c4 = MyTextField;\n\nvar Test = function Test(_ref4) {\n  _objectDestructuringEmpty(_ref4);\n\n  return /*#__PURE__*/_jsxDEV(TestWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        text: \"\",\n        isbool: false,\n        checks: [],\n        nation: ''\n      },\n      validate: function validate(values) {\n        var errors = {};\n\n        if (values.text.includes(\"!\") || values.username.includes(\"?\")) {\n          errors.username = \"! or ? cannot be username\";\n        }\n\n        return errors;\n      },\n      onSubmit: function onSubmit(data, _ref5) {\n        var setSubmitting = _ref5.setSubmitting;\n        setSubmitting(true);\n        console.log(data);\n        setSubmitting(false);\n      },\n      children: function children(_ref6) {\n        var isSubmitting = _ref6.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"text\",\n              as: TextField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LabeledCheckbox, {\n              name: \"checks\",\n              value: \"React\",\n              label: \"React\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, _this), /*#__PURE__*/_jsxDEV(LabeledCheckbox, {\n              name: \"checks\",\n              value: \"Redux\",\n              label: \"Redux\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, _this), /*#__PURE__*/_jsxDEV(LabeledCheckbox, {\n              name: \"checks\",\n              value: \"Vue\",\n              label: \"Vue\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, _this), /*#__PURE__*/_jsxDEV(LabeledCheckbox, {\n              name: \"checks\",\n              value: \"MobX\",\n              label: \"MobX\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LabeledRadio, {\n                name: \"nation\",\n                value: \"Korea\",\n                label: \"Korea\",\n                type: \"radio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(LabeledRadio, {\n                name: \"nation\",\n                value: \"Japan\",\n                label: \"Japan\",\n                type: \"radio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(LabeledRadio, {\n                name: \"nation\",\n                value: \"China\",\n                label: \"China\",\n                type: \"radio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_c5 = Test;\nexport default Test;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TestWrapper\");\n$RefreshReg$(_c2, \"LabeledRadio\");\n$RefreshReg$(_c3, \"LabeledCheckbox\");\n$RefreshReg$(_c4, \"MyTextField\");\n$RefreshReg$(_c5, \"Test\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/form/Test.tsx"],"names":["styled","Formik","Field","Form","useField","TextField","Button","Checkbox","FormControlLabel","Radio","TestWrapper","div","LabeledRadio","label","rest","field","LabeledCheckbox","MyTextField","placeholder","meta","errorText","error","touched","Test","text","isbool","checks","nation","values","errors","includes","username","data","setSubmitting","console","log","isSubmitting"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { Formik, Field, Form, useField, FieldAttributes} from \"formik\"\nimport { TextField, Button, Checkbox, FormControlLabel,Radio } from \"@material-ui/core\";\n\nconst TestWrapper = styled.div`\n  width:100%;\n  height:100%;\n  display:flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props { \n\n}\n\ntype RadioProps = { label: string } & FieldAttributes<{}>;\n\nconst LabeledRadio: React.FC<RadioProps> = ({ label, ...rest }) => {\n  const [field,] = useField(rest);\n  return (\n    <FormControlLabel control={<Radio />} label={label} {...field} />\n  )\n} \n\n\nconst LabeledCheckbox: React.FC<RadioProps> = ({ label, ...rest }) => { \n  const [field,] = useField(rest);\n  return (\n    <FormControlLabel control={<Checkbox />} label={label} {...field} />\n  )\n}\n\nconst MyTextField: React.FC<FieldAttributes<{}>> = ({\n  placeholder,\n  ...rest\n}) => {\n  const [field, meta] = useField<{}>(rest);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      placeholder={placeholder}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n \nconst Test = ({  }:Props):JSX.Element=> {\n  \n  return (\n    <TestWrapper>\n      <Formik initialValues={{ text: \"\", isbool: false, checks: [], nation: '' }}\n        validate={values => {\n          const errors: Record<string, string> = {}\n          if (values.text.includes(\"!\") || values.username.includes(\"?\")) { \n            errors.username = \"! or ? cannot be username\"\n          }\n          return errors;\n        }}\n        onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true) \n        console.log(data)\n        \n        \n              setSubmitting(false) \n            }}>\n\n            { \n                ({ isSubmitting }) => (\n                <Form> \n                      <div>\n                        <Field name=\"text\" as={TextField} /> \n                    </div>\n                    <div>\n                      <LabeledCheckbox name=\"checks\" value=\"React\" label=\"React\" type=\"checkbox\" />\n                      <LabeledCheckbox name=\"checks\" value=\"Redux\" label=\"Redux\" type=\"checkbox\" />\n                      <LabeledCheckbox name=\"checks\" value=\"Vue\" label=\"Vue\" type=\"checkbox\" />\n                      <LabeledCheckbox name=\"checks\" value=\"MobX\" label=\"MobX\" type=\"checkbox\" /> \n                    </div>\n                    <div>\n                      <div>\n                        \n                        <LabeledRadio name=\"nation\" value=\"Korea\" label=\"Korea\" type=\"radio\" />\n                        <LabeledRadio name=\"nation\" value=\"Japan\" label=\"Japan\" type=\"radio\" />\n                        <LabeledRadio name=\"nation\" value=\"China\" label=\"China\" type=\"radio\" />\n                      </div>\n                    </div>\n\n                      <Button type=\"submit\" disabled={isSubmitting}>Submit</Button>\n                </Form>\n                ) \n              }\n\n            </Formik>\n    </TestWrapper>\n  )\n\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}