{"ast":null,"code":"import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nconst initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: true,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: true,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: true,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: true,\n  addCommentError: null\n};\nexport const generateDummyPost = number => Array(number).map(() => ({\n  id: shortid.generate(),\n  User: {\n    id: shortid.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortid.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = () => ({\n  type: ADD_COMMENT_REQUEST\n});\n\nconst dummyCommment = data => ({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"학구찡\"\n  }\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"학구\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      console.log(\"액데\");\n      console.log(action.data);\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.mainPosts.unshift(dummyPost(action.data));\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      const post = draft.mainPosts.find(v => v.id === action.data.postId);\n      post.Comments.unshift(dummyCommment(action.data.content));\n      draft.addCommentLoading = false;\n      draft.addCommentDone = true;\n      break;\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/reducers/post.ts"],"names":["shortid","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyCommment","dummyPost","reducer","state","action","draft","console","log","concat","length","error","unshift","filter","v","post","find","postId"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\n\nconst initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: true,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: true,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: true,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: true,\n  addCommentError: null,\n};\n\nexport const generateDummyPost = (number) =>\n  Array(number)\n    .map(() => ({\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{ src: faker.image.image() }],\n      Comments: [\n        {\n          User: {\n            id: shortid.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    }));\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = () => ({\n  type: ADD_COMMENT_REQUEST,\n});\n\nconst dummyCommment = (data) => ({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"학구찡\",\n  },\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"학구\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        console.log(\"액데\");\n        console.log(action.data);\n\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyCommment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}