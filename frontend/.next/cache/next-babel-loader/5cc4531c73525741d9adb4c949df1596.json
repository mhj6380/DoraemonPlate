{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/chat/[room_key].tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\";\nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm';\nimport { useChatState } from 'lib/providers/chatProvider';\nconst ChatRoomWrapper = styled.div.withConfig({\n  displayName: \"room_key__ChatRoomWrapper\",\n  componentId: \"sc-1qg7hk3-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n\nconst ChatRoom = ({}) => {\n  const router = useRouter();\n  const {\n    room_key\n  } = router.query;\n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  useEffect(() => {\n    if (!room_key) return;\n    dispatch({\n      type: \"JOIN_ROOM\",\n      payload: room_key.toString()\n    });\n  }, []);\n\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const payload = {\n      id: 3,\n      nickname: \"학구\",\n      profile: \"profile2\",\n      datetime: 'datetime2',\n      message,\n      msgType: 'image2',\n      source: 'source2'\n    };\n    dispatch({\n      type: \"SEND_MESSAGE\",\n      payload\n    });\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(ChatRoomWrapper, {\n      children: [\"Room : \", room_key, /*#__PURE__*/_jsxDEV(ChatList, {\n        datas: chat.chatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ChatRoom;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/chat/[room_key].tsx"],"names":["React","useEffect","useState","TransitionLayout","useRouter","styled","useChatDispatch","ChatList","ChatForm","useChatState","ChatRoomWrapper","div","ChatRoom","router","room_key","query","dispatch","chat","message","setMessage","type","payload","toString","handleSendMessage","e","preventDefault","id","nickname","profile","datetime","msgType","source","chatList"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAGA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+DAArB;;AAWA,MAAMC,QAAQ,GAAG,CAAC,EAAD,KAA2B;AAC1C,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AACA,QAAMC,QAAQ,GAAGV,eAAe,EAAhC;AACA,QAAMW,IAAI,GAAGR,YAAY,EAAzB;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,QAAL,EAAe;AAEfE,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,WAAN;AAAmBC,MAAAA,OAAO,EAACP,QAAQ,CAACQ,QAAT;AAA3B,KAAD,CAAR;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,iBAAiB,GAAIC,CAAD,IAAgB;AACxCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMJ,OAAqB,GAAG;AAC5BK,MAAAA,EAAE,EAAE,CADwB;AAE5BC,MAAAA,QAAQ,EAAE,IAFkB;AAG5BC,MAAAA,OAAO,EAAE,UAHmB;AAI5BC,MAAAA,QAAQ,EAAE,WAJkB;AAK5BX,MAAAA,OAL4B;AAM5BY,MAAAA,OAAO,EAAE,QANmB;AAO5BC,MAAAA,MAAM,EAAE;AAPoB,KAA9B;AAUEf,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA;AAAtB,KAAD,CAAR;AAEFF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAhBD;;AAkBA,sBACE,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,cAAxB;AAA6B,IAAA,aAAa,EAAE,IAA5C;AAAA,2BACA,QAAC,eAAD;AAAA,4BACYL,QADZ,eAEI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEG,IAAI,CAACe;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEd,OAAnB;AAA4B,QAAA,UAAU,EAAEC,UAAxC;AAAoD,QAAA,iBAAiB,EAAEI;AAAvE;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzCD;;AA2CA,eAAeX,QAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\"; \nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm'; \nimport { useChatState } from 'lib/providers/chatProvider';\nimport { TChatMessage } from 'types/chat';\n\nconst ChatRoomWrapper = styled.div`\n  width:100%;\n  height:100%; \n  display:flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props { \n\n}\n\nconst ChatRoom = ({  }:Props):JSX.Element=> {\n  const router = useRouter()\n  const { room_key } = router.query; \n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (!room_key) return;\n\n    dispatch({type:\"JOIN_ROOM\", payload:room_key.toString()})  \n  }, []);\n\n  const handleSendMessage = (e:any):void => {\n    e.preventDefault();\n   \n    const payload: TChatMessage = {\n      id: 3,\n      nickname: \"학구\", \n      profile: \"profile2\", \n      datetime: 'datetime2',\n      message,  \n      msgType: 'image2',\n      source: 'source2'\n      } \n\n      dispatch({type:\"SEND_MESSAGE\", payload})   \n    \n    setMessage(''); \n  }\n\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>  \n    <ChatRoomWrapper>\n        Room : {room_key}\n        <ChatList datas={chat.chatList}/> \n        <ChatForm message={message} setMessage={setMessage} handleSendMessage={handleSendMessage}/>\n     </ChatRoomWrapper>\n   </TransitionLayout>\n  )\n\n} \n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}