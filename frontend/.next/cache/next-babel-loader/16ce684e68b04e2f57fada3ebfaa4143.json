{"ast":null,"code":"import { delay, put, takeLatest, all, fork, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from \"../reducers/user\";\n\nfunction loadUserAPI(data) {\n  return axios.get(`http://localhost:8080/auth/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    console.log(\"LOAD USER\");\n    const result = yield call(loadUserAPI, action.data.data);\n    console.log(result);\n    yield delay(1000);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      erro: err.response.data\n    });\n  }\n} // function logInAPI(data) {\n//   return axios.post(\"/api/login\", data);\n// }\n\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      erro: err.response.data\n    });\n  }\n} // function logOutAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\n\nfunction* logOut() {\n  try {\n    console.log(\"싸가 로그아웃\"); // const result = yield call(logOutAPI);\n\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function signUpAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\n\nfunction* signUp(data) {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function followAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function unfollowAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["/Users/munhagju/WebstormProjects/DoraemonPlate/frontend/sagas/user.js"],"names":["delay","put","takeLatest","all","fork","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","loadUserAPI","data","get","loadUser","action","console","log","result","type","err","erro","response","logIn","logOut","error","signUp","follow","unfollow","watchLogin","watchLogout","watchSignUp","watchFollow","watchUnfollow","watchLoadUser","userSaga"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,EAUEC,cAVF,EAWEC,cAXF,EAYEC,cAZF,EAaEC,gBAbF,EAcEC,gBAdF,EAeEC,gBAfF,EAgBEC,iBAhBF,EAiBEC,iBAjBF,EAkBEC,iBAlBF,QAmBO,kBAnBP;;AAqBA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,SAAOpB,KAAK,CAACqB,GAAN,CAAW,mCAAkCD,IAAK,EAAlD,CAAP;AACD;;AAED,UAAUE,QAAV,CAAmBC,MAAnB,EAA2B;AACzB,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAMC,MAAM,GAAG,MAAM3B,IAAI,CAACoB,WAAD,EAAcI,MAAM,CAACH,IAAP,CAAYA,IAA1B,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,UAAMhC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEV,iBADE;AAERG,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,KAAD,CAAT;AAID,GATD,CASE,OAAOQ,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAET,iBADE;AAERW,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFX,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUW,KAAV,CAAgBR,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAM7B,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEzB,cADE;AAERkB,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAExB,cADE;AAER0B,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFX,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUY,MAAV,GAAmB;AACjB,MAAI;AACFR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EADE,CAEF;;AACA,UAAM/B,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEtB;AADE,KAAD,CAAT;AAGD,GAPD,CAOE,OAAOuB,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAErB,eADE;AAER2B,MAAAA,KAAK,EAAEL,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUc,MAAV,CAAiBd,IAAjB,EAAuB;AACrB,MAAI;AACF;AACA,UAAM1B,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEnB,eADE;AAERY,MAAAA;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAElB,eADE;AAERwB,MAAAA,KAAK,EAAEL,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUe,MAAV,CAAiBZ,MAAjB,EAAyB;AACvB,MAAI;AACF;AACA,UAAM7B,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEhB,cADE;AAERS,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEf,cADE;AAERqB,MAAAA,KAAK,EAAEL,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUgB,QAAV,CAAmBb,MAAnB,EAA2B;AACzB,MAAI;AACF;AACA,UAAM7B,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEb,gBADE;AAERM,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,UAAMjC,GAAG,CAAC;AACRgC,MAAAA,IAAI,EAAEZ,gBADE;AAERkB,MAAAA,KAAK,EAAEL,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUiB,UAAV,GAAuB;AACrB,QAAMzC,UAAU,CAACK,cAAD,EAAiB8B,KAAjB,CAAhB;AACD;;AAED,UAAUO,WAAV,GAAwB;AACtB,QAAM1C,UAAU,CAACQ,eAAD,EAAkB4B,MAAlB,CAAhB;AACD;;AACD,UAAUO,WAAV,GAAwB;AACtB,QAAM3C,UAAU,CAACW,eAAD,EAAkB2B,MAAlB,CAAhB;AACD;;AAED,UAAUM,WAAV,GAAwB;AACtB,QAAM5C,UAAU,CAACc,cAAD,EAAiByB,MAAjB,CAAhB;AACD;;AAED,UAAUM,aAAV,GAA0B;AACxB,QAAM7C,UAAU,CAACiB,gBAAD,EAAmBuB,QAAnB,CAAhB;AACD;;AAED,UAAUM,aAAV,GAA0B;AACxB,QAAM9C,UAAU,CAACoB,iBAAD,EAAoBM,QAApB,CAAhB;AACD;;AAED,eAAe,UAAUqB,QAAV,GAAqB;AAClC,QAAM9C,GAAG,CAAC,CACRC,IAAI,CAACuC,UAAD,CADI,EAERvC,IAAI,CAACwC,WAAD,CAFI,EAGRxC,IAAI,CAACyC,WAAD,CAHI,EAIRzC,IAAI,CAAC0C,WAAD,CAJI,EAKR1C,IAAI,CAAC2C,aAAD,CALI,EAMR3C,IAAI,CAAC4C,aAAD,CANI,CAAD,CAAT;AAQD","sourcesContent":["import { delay, put, takeLatest, all, fork, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAILURE,\n} from \"../reducers/user\";\n\nfunction loadUserAPI(data) {\n  return axios.get(`http://localhost:8080/auth/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    console.log(\"LOAD USER\");\n    const result = yield call(loadUserAPI, action.data.data);\n    console.log(result);\n    yield delay(1000);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      erro: err.response.data,\n    });\n  }\n}\n\n// function logInAPI(data) {\n//   return axios.post(\"/api/login\", data);\n// }\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      erro: err.response.data,\n    });\n  }\n}\n\n// function logOutAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\nfunction* logOut() {\n  try {\n    console.log(\"싸가 로그아웃\");\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function signUpAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\nfunction* signUp(data) {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function followAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function unfollowAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogin),\n    fork(watchLogout),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLoadUser),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}