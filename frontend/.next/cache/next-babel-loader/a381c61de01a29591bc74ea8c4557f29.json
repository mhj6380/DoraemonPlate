{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nvar BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"sc-1x045vr-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = BoardWriteWrapper;\nvar SubmitBtn = styled.button.withConfig({\n  displayName: \"write__SubmitBtn\",\n  componentId: \"sc-1x045vr-1\"\n})([\"box-shadow:none;font-size:16px;padding:10px 30px;border-radius 5px;background:#1a1a1a;color:#fff;\"]);\n_c2 = SubmitBtn;\n\nvar BoardWritePage = function BoardWritePage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(EditorState.createEmpty()),\n      editorState = _useState[0],\n      setEditorState = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  // const editorToHtml = draftToHtml(\n  //   convertToRaw(editorState.getCurrentContent())\n  // );\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: function validate(values) {\n            var errors = {};\n\n            if (values.title === '') {\n              errors.text = '제목을 입력해주세요.';\n            }\n\n            return errors;\n          },\n          onSubmit: function onSubmit(data, _ref2) {\n            var setSubmitting = _ref2.setSubmitting;\n            setSubmitting(true);\n            setLoading(true);\n            console.log(data);\n            alert('TQ');\n            var editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n            axios.post(\"\".concat(BACKEND_URL, \"/board\"), {\n              title: data.title,\n              content: editorToHtml.toString(),\n              author: '어썰',\n              thumbnail: '',\n              tags: 'tag'\n            }).then(function (res) {\n              console.log(res.data);\n            });\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n              type: \"submit\",\n              children: \"\\uC791\\uC131\\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoardWritePage, \"PbcEIdSN2x4nROGF2k+C+fE89Qg=\");\n\n_c3 = BoardWritePage;\nexport default BoardWritePage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BoardWriteWrapper\");\n$RefreshReg$(_c2, \"SubmitBtn\");\n$RefreshReg$(_c3, \"BoardWritePage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx"],"names":["useState","styled","TransitionLayout","EditorField","draftToHtml","BasicTextField","EditorState","convertToRaw","Formik","Form","axios","BACKEND_URL","BoardWriteWrapper","div","SubmitBtn","button","BoardWritePage","createEmpty","editorState","setEditorState","loading","setLoading","title","content","tags","tag_name","values","errors","text","data","setSubmitting","console","log","alert","editorToHtml","getCurrentContent","post","toString","author","thumbnail","then","res","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst SubmitBtn = styled.button`\n  box-shadow:none;\n  font-size:16px;\n  padding:10px 30px;\n  border-radius 5px;\n  background: #1a1a1a;\n  color: #fff;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  // const editorToHtml = draftToHtml(\n  //   convertToRaw(editorState.getCurrentContent())\n  // );\n\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                errors.text = '제목을 입력해주세요.';\n              }\n\n              return errors;\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n              setLoading(true);\n              console.log(data);\n              alert('TQ');\n              const editorToHtml = draftToHtml(\n                convertToRaw(editorState.getCurrentContent())\n              );\n              axios\n                .post(`${BACKEND_URL}/board`, {\n                  title: data.title,\n                  content: editorToHtml.toString(),\n                  author: '어썰',\n                  thumbnail: '',\n                  tags: 'tag',\n                })\n                .then((res: any) => {\n                  console.log(res.data);\n                });\n\n              setSubmitting(false);\n            }}\n          >\n            <Form style={{ width: '100%' }}>\n              <BasicTextField name=\"title\" />\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n              <SubmitBtn type=\"submit\">작성완료</SubmitBtn>\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}