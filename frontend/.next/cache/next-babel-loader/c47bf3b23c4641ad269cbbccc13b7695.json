{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useMemo } from \"react\";\nimport UserProfileContext from \"../profile/UserProfileContext\";\nimport SocketContext from \"./SocketContext\";\nexport function useRoomState() {\n  _s();\n\n  var profile = useContext(UserProfileContext);\n  var socket = useContext(SocketContext);\n  var joinable = useMemo(function () {\n    return (\n      /* connected */\n      socket &&\n      /* profile set */\n      profile &&\n      /* not yet joined to any room */\n      !socket.roomId &&\n      /* user name set */\n      profile.name &&\n      /* user name non-empty string */\n      profile.name.length > 0\n    );\n  }, [socket, profile]);\n  var joined = useMemo(function () {\n    return !!(socket === null || socket === void 0 ? void 0 : socket.roomId);\n  }, [socket]);\n  return {\n    joined: joined,\n    joinable: joinable\n  };\n}\n\n_s(useRoomState, \"B3f9iO/vt9NVzQtbpa1iXMiOpgI=\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/contexts/socket/useRoomState.ts"],"names":["useContext","useMemo","UserProfileContext","SocketContext","useRoomState","profile","socket","joinable","roomId","name","length","joined"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AAEA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAcA,OAAO,SAASC,YAAT,GAAwC;AAAA;;AAC7C,MAAMC,OAAO,GAAGL,UAAU,CAACE,kBAAD,CAA1B;AACA,MAAMI,MAAM,GAAGN,UAAU,CAACG,aAAD,CAAzB;AAEA,MAAMI,QAAQ,GAAGN,OAAO,CACtB;AAAA;AACE;AAAgBK,MAAAA,MAAM;AACtB;AAAkBD,MAAAA,OADF;AAEhB;AAAiC,OAACC,MAAM,CAACE,MAFzB;AAGhB;AAAoBH,MAAAA,OAAO,CAACI,IAHZ;AAIhB;AAAiCJ,MAAAA,OAAO,CAACI,IAAR,CAAaC,MAAb,GAAsB;AALzD;AAAA,GADsB,EAOtB,CAACJ,MAAD,EAASD,OAAT,CAPsB,CAAxB;AAUA,MAAMM,MAAM,GAAGV,OAAO,CAAC;AAAA,WAAM,CAAC,EAACK,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,MAAT,CAAP;AAAA,GAAD,EAAyB,CAACF,MAAD,CAAzB,CAAtB;AAEA,SAAO;AAAEK,IAAAA,MAAM,EAANA,MAAF;AAAUJ,IAAAA,QAAQ,EAARA;AAAV,GAAP;AACD;;GAjBeH,Y","sourcesContent":["import { useContext, useMemo } from \"react\";\r\n\r\nimport UserProfileContext from \"../profile/UserProfileContext\";\r\nimport SocketContext from \"./SocketContext\";\r\n\r\ninterface RoomStateIface {\r\n  /**\r\n   * true if connected but joined\r\n   */\r\n  readonly joinable: boolean;\r\n\r\n  /**\r\n   * true if joined\r\n   */\r\n  readonly joined: boolean;\r\n}\r\n\r\nexport function useRoomState(): RoomStateIface {\r\n  const profile = useContext(UserProfileContext);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const joinable = useMemo(\r\n    () =>\r\n      /* connected */ socket &&\r\n      /* profile set */ profile &&\r\n      /* not yet joined to any room */ !socket.roomId &&\r\n      /* user name set */ profile.name &&\r\n      /* user name non-empty string */ profile.name.length > 0,\r\n    [socket, profile]\r\n  );\r\n\r\n  const joined = useMemo(() => !!socket?.roomId, [socket]);\r\n\r\n  return { joined, joinable };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}