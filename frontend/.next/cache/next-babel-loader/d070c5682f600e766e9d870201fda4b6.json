{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\nvar DataTableWrapper = styled.div.withConfig({\n  displayName: \"DataTable__DataTableWrapper\",\n  componentId: \"sc-14fb33p-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = DataTableWrapper;\nvar columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: function sorter(a, b) {\n    return a.name - b.name;\n  }\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  sorter: function sorter(a, b) {\n    return a.age - b.age;\n  }\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  sorter: function sorter(a, b) {\n    return a.address - b.address;\n  }\n}];\nvar data = [];\n\nfor (var i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: \"Edward King \".concat(i),\n    age: 32,\n    address: \"London, Park Lane no. \".concat(i)\n  });\n}\n\nvar DataTable = function DataTable(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      selectedRowKeys = _useState[0],\n      setSelectedRowKeys = _useState[1];\n\n  var onSelectChange = function onSelectChange(selectedRowKeys) {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  var rowSelection = {\n    selectedRowKeys: selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: function onSelect(changableRowKeys) {\n        var newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: function onSelect(changableRowKeys) {\n        var newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(DataTableWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DataTable, \"AGfOs+7sjQarz8vBaL7lsXNTa7o=\");\n\n_c2 = DataTable;\nexport default DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataTableWrapper\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx"],"names":["useState","styled","Table","DataTableWrapper","div","columns","title","dataIndex","sorter","a","b","name","age","address","data","i","push","key","DataTable","selectedRowKeys","setSelectedRowKeys","onSelectChange","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\n\nconst DataTableWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name - b.name,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    sorter: (a, b) => a.address - b.address,\n  },\n];\n\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\ninterface Props {}\n\nconst DataTable = ({}: Props): JSX.Element => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const onSelectChange = (selectedRowKeys: any) => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return (\n    <DataTableWrapper>\n      <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n    </DataTableWrapper>\n  );\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}