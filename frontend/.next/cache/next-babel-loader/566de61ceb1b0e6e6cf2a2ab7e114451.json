{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/index.tsx\";\n\n// posts will be populated at build time by getStaticProps()\nfunction Blog({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  // const res = await fetch('https://.../posts')\n  // const posts = await res.json()\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/index.tsx"],"names":["Blog","posts","map","post","title","getStaticProps","props"],"mappings":";;;AAAA;AACA,SAASA,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACvB,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA;AACA;AAEA;AACA;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLL,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["// posts will be populated at build time by getStaticProps()\nfunction Blog({ posts }) {\n  return (\n    <ul>\n      {posts.map((post) => (\n        <li>{post.title}</li>\n      ))}\n    </ul>\n  )\n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  // const res = await fetch('https://.../posts')\n  // const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts,\n    },\n  }\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}