{"ast":null,"code":"import _toConsumableArray from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useChatDispatch } from 'lib/providers/chatProvider';\nimport ChatForm from 'components/chat/ChatForm'; // import { useChatState } from 'lib/providers/chatProvider';\n\nimport { useAuthState } from 'lib/providers/authProvider';\nimport dayjs from 'dayjs';\nimport useSWR from 'swr';\nimport { BACKEND_URL } from 'config';\nimport axios from 'axios';\nvar DirectMessageWrapper = styled.div.withConfig({\n  displayName: \"partner_id__DirectMessageWrapper\",\n  componentId: \"sc-4pw1eg-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;background:#ededed;\"]);\n_c = DirectMessageWrapper;\n\nvar DirectMessage = function DirectMessage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var partner_id = router.query.partner_id;\n  var dispatch = useChatDispatch();\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var me = useAuthState(); // const chat = useChatState();\n\n  var usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  var room_key = \"\".concat(usersArr[0], \":\").concat(usersArr[1]);\n\n  var fetcher = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(url);\n\n            case 2:\n              resp = _context.sent;\n              return _context.abrupt(\"return\", resp.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetcher(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useSWR = useSWR(\"\".concat(BACKEND_URL, \"/chat/message/\").concat(room_key), fetcher),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate,\n      error = _useSWR.error;\n\n  var test = function test() {\n    // 기존 캐시 업데이트\n    mutate([].concat(_toConsumableArray(data), [{\n      id: 16,\n      room_key: '111857151517954391058:ttt24522',\n      message: '파하',\n      from_user: 'test',\n      to_user: 'test',\n      nickname: '',\n      profile: '',\n      insert_datetime: '2021-02-15T12:01:49.000Z',\n      message_type: 'text',\n      source: ''\n    }]), false);\n  };\n\n  useEffect(function () {\n    if (!partner_id) return;\n    dispatch({\n      type: 'JOIN_ROOM',\n      payload: room_key\n    });\n  }, []);\n\n  var handleSendMessage = function handleSendMessage(e) {\n    e.preventDefault();\n    var _me$userInfo = me.userInfo,\n        nickname = _me$userInfo.nickname,\n        profile = _me$userInfo.profile,\n        user_id = _me$userInfo.user_id;\n    var payload = {\n      room_key: room_key,\n      nickname: nickname,\n      profile: profile,\n      insert_datetime: dayjs().format('YYYY-MM-DD HH:mm:ss'),\n      message: message,\n      source: '',\n      message_type: 'text',\n      from_user: user_id,\n      to_user: partner_id.toString()\n    };\n    dispatch({\n      type: 'SEND_MESSAGE',\n      payload: payload\n    });\n    setMessage('');\n  };\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(DirectMessageWrapper, {\n      children: [JSON.stringify(data), \"partner_id : \", partner_id, JSON.stringify(me.userInfo.user_id), /*#__PURE__*/_jsxDEV(ChatForm, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: test,\n        children: \"MUTATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DirectMessage, \"5jdK/IBHeFP8HGtcHId6KxgjXnI=\", false, function () {\n  return [useRouter, useChatDispatch, useAuthState, useSWR];\n});\n\n_c2 = DirectMessage;\nexport default DirectMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectMessageWrapper\");\n$RefreshReg$(_c2, \"DirectMessage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx"],"names":["React","useEffect","useState","TransitionLayout","useRouter","styled","useChatDispatch","ChatForm","useAuthState","dayjs","useSWR","BACKEND_URL","axios","DirectMessageWrapper","div","DirectMessage","router","partner_id","query","dispatch","message","setMessage","me","usersArr","userInfo","user_id","sort","room_key","fetcher","url","get","resp","data","mutate","error","test","id","from_user","to_user","nickname","profile","insert_datetime","message_type","source","type","payload","handleSendMessage","e","preventDefault","format","toString","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useChatDispatch } from 'lib/providers/chatProvider';\nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm';\n// import { useChatState } from 'lib/providers/chatProvider';\nimport { TChatMessage } from 'types/chat';\nimport { useAuthState } from 'lib/providers/authProvider';\nimport dayjs from 'dayjs';\nimport useSWR from 'swr';\nimport { BACKEND_URL } from 'config';\nimport axios from 'axios';\n\nconst DirectMessageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  background: #ededed;\n`;\n\ninterface Props {}\n\nconst DirectMessage = ({}: Props): JSX.Element => {\n  const router = useRouter();\n  const { partner_id } = router.query;\n  const dispatch = useChatDispatch();\n  const [message, setMessage] = useState('');\n  const me = useAuthState();\n  // const chat = useChatState();\n\n  const usersArr = [me.userInfo.user_id, partner_id];\n  usersArr.sort();\n  const room_key = `${usersArr[0]}:${usersArr[1]}`;\n\n  const fetcher = async (url: string) => {\n    const resp = await axios.get(url);\n    return resp.data;\n  };\n\n  const { data, mutate, error } = useSWR(\n    `${BACKEND_URL}/chat/message/${room_key}`,\n    fetcher\n  );\n\n  const test = () => {\n    // 기존 캐시 업데이트\n    mutate(\n      [\n        ...data,\n        {\n          id: 16,\n          room_key: '111857151517954391058:ttt24522',\n          message: '파하',\n          from_user: 'test',\n          to_user: 'test',\n          nickname: '',\n          profile: '',\n          insert_datetime: '2021-02-15T12:01:49.000Z',\n          message_type: 'text',\n          source: '',\n        },\n      ],\n      false\n    );\n  };\n\n  useEffect(() => {\n    if (!partner_id) return;\n\n    dispatch({ type: 'JOIN_ROOM', payload: room_key });\n  }, []);\n\n  const handleSendMessage = (e: any): void => {\n    e.preventDefault();\n\n    const { nickname, profile, user_id } = me.userInfo;\n\n    const payload: TChatMessage = {\n      room_key,\n      nickname,\n      profile,\n      insert_datetime: dayjs().format('YYYY-MM-DD HH:mm:ss'),\n      message,\n      source: '',\n      message_type: 'text',\n      from_user: user_id,\n      to_user: partner_id.toString(),\n    };\n\n    dispatch({ type: 'SEND_MESSAGE', payload });\n\n    setMessage('');\n  };\n\n  if (error) return <div>ERROR</div>;\n\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>\n      <DirectMessageWrapper>\n        {JSON.stringify(data)}\n        partner_id : {partner_id}\n        {JSON.stringify(me.userInfo.user_id)}\n        {/* <ChatList datas={data} /> */}\n        <ChatForm\n          message={message}\n          setMessage={setMessage}\n          handleSendMessage={handleSendMessage}\n        />\n        <button onClick={test}>MUTATE</button>\n      </DirectMessageWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default DirectMessage;\n"]},"metadata":{},"sourceType":"module"}