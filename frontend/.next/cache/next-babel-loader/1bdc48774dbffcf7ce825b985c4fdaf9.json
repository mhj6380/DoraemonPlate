{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/view.tsx\";\nimport { BACKEND_URL } from 'config';\nimport styled from 'styled-components';\nimport useSWR from 'swr';\nimport axios from 'util/axios';\nimport TransitionLayout from 'components/layout/TransitionLayout'; // import queryString from 'query-string';\n\nimport dayjs from 'dayjs';\nconst BoardViewPageWrapper = styled.div.withConfig({\n  displayName: \"view__BoardViewPageWrapper\",\n  componentId: \"l2m26k-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n\nconst BoardViewPage = ({}) => {\n  // const parsed = queryString.parse(location.search);\n  const fetcher = async url => {\n    const resp = await axios.get(url);\n    return resp.data;\n  };\n\n  const {\n    data,\n    mutate,\n    error\n  } = useSWR(`${BACKEND_URL}/board/17`, fetcher);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(BoardViewPageWrapper, {\n      children: [data.title, dayjs(data.createdAt).format('YYYY.MM.DD HH:ii'), data.content, JSON.stringify(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardViewPage;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/view.tsx"],"names":["BACKEND_URL","styled","useSWR","axios","TransitionLayout","dayjs","BoardViewPageWrapper","div","BoardViewPage","fetcher","url","resp","get","data","mutate","error","title","createdAt","format","content","JSON","stringify"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,oBAAoB,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+DAA1B;;AASA,MAAMC,aAAa,GAAG,CAAC,EAAD,KAA4B;AAChD;AACA,QAAMC,OAAO,GAAG,MAAOC,GAAP,IAAuB;AACrC,UAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,GAAV,CAAnB;AACA,WAAOC,IAAI,CAACE,IAAZ;AACD,GAHD;;AAKA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0Bb,MAAM,CAAE,GAAEF,WAAY,WAAhB,EAA4BS,OAA5B,CAAtC;AACA,MAAI,CAACI,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,cAAxB;AAA6B,IAAA,aAAa,EAAE,IAA5C;AAAA,2BACE,QAAC,oBAAD;AAAA,iBACGF,IAAI,CAACG,KADR,EAEGX,KAAK,CAACQ,IAAI,CAACI,SAAN,CAAL,CAAsBC,MAAtB,CAA6B,kBAA7B,CAFH,EAGGL,IAAI,CAACM,OAHR,EAIGC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;AAuBA,eAAeL,aAAf","sourcesContent":["import { BACKEND_URL } from 'config';\nimport styled from 'styled-components';\nimport useSWR from 'swr';\nimport axios from 'util/axios';\nimport TransitionLayout from 'components/layout/TransitionLayout';\n// import queryString from 'query-string';\nimport dayjs from 'dayjs';\nconst BoardViewPageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props {}\n\nconst BoardViewPage = ({}: Props): JSX.Element => {\n  // const parsed = queryString.parse(location.search);\n  const fetcher = async (url: string) => {\n    const resp = await axios.get(url);\n    return resp.data;\n  };\n\n  const { data, mutate, error } = useSWR(`${BACKEND_URL}/board/17`, fetcher);\n  if (!data) return <div>Loading</div>;\n  if (error) return <div>ERROR</div>;\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>\n      <BoardViewPageWrapper>\n        {data.title}\n        {dayjs(data.createdAt).format('YYYY.MM.DD HH:ii')}\n        {data.content}\n        {JSON.stringify(data)}\n        {/* QS: {JSON.stringify(parsed)} */}\n      </BoardViewPageWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardViewPage;\n"]},"metadata":{},"sourceType":"module"}