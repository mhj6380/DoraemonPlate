{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/WebstormProjects/DoraemonPlate/frontend/pages/_app.tsx\";\nimport wrapper from \"../store/configureStore\";\nimport withReduxSage from \"next-redux-saga\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../scss/global.scss';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\n\nconst App = ({\n  Component\n}) => {\n  const accessToken = Cookies.get(\"accessToken\");\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n\n  if (accessToken) {\n    dispatch(loginRequestAction({\n      user_id: jwtDecode(accessToken).user_id\n    }));\n    console.log(\"GLOBAL!\", jwtDecode(accessToken).user_id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default wrapper.withRedux(withReduxSage(App));","map":{"version":3,"sources":["/Users/munhagju/WebstormProjects/DoraemonPlate/frontend/pages/_app.tsx"],"names":["wrapper","withReduxSage","Cookies","jwtDecode","useDispatch","useSelector","loginRequestAction","App","Component","accessToken","get","dispatch","me","state","user","user_id","console","log","withRedux"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,kCAAP;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC7B,QAAMC,WAAW,GAAGP,OAAO,CAACQ,GAAR,CAAY,aAAZ,CAApB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASP,WAAW,CAAEQ,KAAD,IAAeA,KAAK,CAACC,IAAtB,CAA1B;;AAEA,MAAIL,WAAJ,EAAiB;AACfE,IAAAA,QAAQ,CAACL,kBAAkB,CAAC;AAAES,MAAAA,OAAO,EAACZ,SAAS,CAAMM,WAAN,CAAT,CAA4BM;AAAtC,KAAD,CAAnB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBd,SAAS,CAAMM,WAAN,CAAT,CAA4BM,OAAlD;AACD;;AAGD,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAhBD;;AAkBA,eAAef,OAAO,CAACkB,SAAR,CAAkBjB,aAAa,CAACM,GAAD,CAA/B,CAAf","sourcesContent":["import wrapper from \"../store/configureStore\";\nimport withReduxSage from \"next-redux-saga\";\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../scss/global.scss'; \nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\n \nconst App = ({ Component }) => {\n  const accessToken = Cookies.get(\"accessToken\");\n  const dispatch = useDispatch();\n  const { me } = useSelector((state:any) => state.user);\n\n  if (accessToken) {\n    dispatch(loginRequestAction({ user_id:jwtDecode<any>(accessToken).user_id }));\n    console.log(\"GLOBAL!\",jwtDecode<any>(accessToken).user_id); \n  }\n  \n\n  return (\n    <>\n      <Component /> \n    </>\n  );\n};\n\nexport default wrapper.withRedux(withReduxSage(App));\n"]},"metadata":{},"sourceType":"module"}