{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\nimport { useAuthState } from 'lib/providers/authProvider';\nvar BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"iq95sf-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = BoardWriteWrapper;\n\nvar BoardWritePage = function BoardWritePage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var me = useAuthState();\n\n  var _useState = useState(EditorState.createEmpty()),\n      editorState = _useState[0],\n      setEditorState = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: function validate(values) {\n            var errors = {};\n\n            if (values.title === '') {\n              errors.title = '제목을 입력해주세요.';\n            }\n\n            if (values.content === '') {\n              errors.content = '내용을 입력해주세요.';\n            }\n\n            return errors;\n          },\n          onSubmit: function onSubmit(data, _ref2) {\n            var setSubmitting = _ref2.setSubmitting;\n            setSubmitting(true);\n            setLoading(true);\n            var editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n            axios.post(\"\".concat(BACKEND_URL, \"/board\"), {\n              title: data.title,\n              content: editorToHtml.toString(),\n              author: me.userInfo.user_id,\n              thumbnail: '',\n              tags: 'tag'\n            }).then(function (res) {\n              console.log(res.data);\n            });\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(BasicSubmitBtn, {\n              text: \"\\uC791\\uC131\\uC644\\uB8CC\",\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoardWritePage, \"WiW4Z1Aa1kxywblZdilPfuNiOq8=\", false, function () {\n  return [useAuthState];\n});\n\n_c2 = BoardWritePage;\nexport default BoardWritePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardWriteWrapper\");\n$RefreshReg$(_c2, \"BoardWritePage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write.tsx"],"names":["useState","styled","TransitionLayout","EditorField","draftToHtml","BasicTextField","EditorState","convertToRaw","Formik","Form","axios","BACKEND_URL","BasicSubmitBtn","useAuthState","BoardWriteWrapper","div","BoardWritePage","me","createEmpty","editorState","setEditorState","loading","setLoading","title","content","tags","tag_name","values","errors","data","setSubmitting","editorToHtml","getCurrentContent","post","toString","author","userInfo","user_id","thumbnail","then","res","console","log","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\nimport { useAuthState } from 'lib/providers/authProvider';\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const me = useAuthState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                errors.title = '제목을 입력해주세요.';\n              }\n\n              if (values.content === '') {\n                errors.content = '내용을 입력해주세요.';\n              }\n\n              return errors;\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n              setLoading(true);\n              const editorToHtml = draftToHtml(\n                convertToRaw(editorState.getCurrentContent())\n              );\n              axios\n                .post(`${BACKEND_URL}/board`, {\n                  title: data.title,\n                  content: editorToHtml.toString(),\n                  author: me.userInfo.user_id,\n                  thumbnail: '',\n                  tags: 'tag',\n                })\n                .then((res: any) => {\n                  console.log(res.data);\n                });\n\n              setSubmitting(false);\n            }}\n          >\n            <Form style={{ width: '100%' }}>\n              <BasicTextField name=\"title\" />\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n\n              <BasicSubmitBtn text=\"작성완료\" loading={loading} />\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}