{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/tools/Avatar.tsx\",\n    _this = this;\n\nimport styled from 'styled-components';\nimport { FaUser } from 'react-icons/fa';\nvar AvatarWrapper = styled.div.withConfig({\n  displayName: \"Avatar__AvatarWrapper\",\n  componentId: \"bcj599-0\"\n})([\"width:100%;height:100%;\"]);\n_c = AvatarWrapper;\n\nvar Avatar = function Avatar(_ref) {\n  var src = _ref.src,\n      size = _ref.size;\n  return /*#__PURE__*/_jsxDEV(AvatarWrapper, {\n    children: src ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, _this) : /*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 47\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = Avatar;\nexport default Avatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AvatarWrapper\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/tools/Avatar.tsx"],"names":["styled","FaUser","AvatarWrapper","div","Avatar","src","size"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,IAAMC,aAAa,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,+BAAnB;KAAMD,a;;AAUN,IAAME,MAAM,GAAG,SAATA,MAAS,OAAuC;AAAA,MAApCC,GAAoC,QAApCA,GAAoC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AACpD,sBACE,QAAC,aAAD;AAAA,cACGD,GAAG,gBAAG;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,aAAH,gBAAoC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAND;;MAAMD,M;AAQN,eAAeA,MAAf","sourcesContent":["import styled from 'styled-components';\nimport { FaUser } from 'react-icons/fa';\n\nconst AvatarWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\ninterface Props {\n  src: string;\n  size: string;\n}\n\nconst Avatar = ({ src, size }: Props): JSX.Element => {\n  return (\n    <AvatarWrapper>\n      {src ? <img src={src} alt=\"avatar\" /> : <FaUser />}\n    </AvatarWrapper>\n  );\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}