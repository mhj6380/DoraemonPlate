{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, message } from 'antd';\nconst DataTableWrapper = styled.div.withConfig({\n  displayName: \"DataTable__DataTableWrapper\",\n  componentId: \"sc-14fb33p-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;table{width:100%;}\"]);\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: i,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nconst DataTable = ({}) => {\n  const {\n    0: selectedRowKeys,\n    1: setSelectedRowKeys\n  } = useState([]);\n\n  const handleDelete = () => {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  const onSelectChange = selectedRowKeys => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(DataTableWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx"],"names":["useState","styled","Table","message","DataTableWrapper","div","data","i","push","key","name","age","address","DataTable","selectedRowKeys","setSelectedRowKeys","handleDelete","info","onSelectChange","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index","columns","width"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAoCC,OAApC,QAAmD,MAAnD;AAEA,MAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,iFAAtB;AAUA,MAAMC,IAAI,GAAG,EAAb;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CADG;AAERG,IAAAA,IAAI,EAAG,eAAcH,CAAE,EAFf;AAGRI,IAAAA,GAAG,EAAEJ,CAHG;AAIRK,IAAAA,OAAO,EAAG,yBAAwBL,CAAE;AAJ5B,GAAV;AAMD;;AAID,MAAMM,SAAS,GAAG,CAAC,EAAD,KAA4B;AAC5C,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCf,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzBb,IAAAA,OAAO,CAACc,IAAR,CAAa,cAAb;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIJ,eAAD,IAA0B;AAC/CC,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAG;AACnBL,IAAAA,eADmB;AAEnBM,IAAAA,QAAQ,EAAEF,cAFS;AAGnBG,IAAAA,UAAU,EAAE,CACVnB,KAAK,CAACoB,aADI,EAEVpB,KAAK,CAACqB,gBAFI,EAGVrB,KAAK,CAACsB,cAHI,EAIV;AACEf,MAAAA,GAAG,EAAE,KADP;AAEEgB,MAAAA,IAAI,EAAE,gBAFR;AAGEC,MAAAA,QAAQ,EAAGC,gBAAD,IAAsB;AAC9B,YAAIC,kBAAkB,GAAG,EAAzB;AACAA,QAAAA,kBAAkB,GAAGD,gBAAgB,CAACE,MAAjB,CAAwB,CAACpB,GAAD,EAAMqB,KAAN,KAAgB;AAC3D,cAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALoB,CAArB;AAMAf,QAAAA,kBAAkB,CAACa,kBAAD,CAAlB;AACD;AAZH,KAJU,EAkBV;AACEnB,MAAAA,GAAG,EAAE,MADP;AAEEgB,MAAAA,IAAI,EAAE,iBAFR;AAGEC,MAAAA,QAAQ,EAAGC,gBAAD,IAAsB;AAC9B,YAAIC,kBAAkB,GAAG,EAAzB;AACAA,QAAAA,kBAAkB,GAAGD,gBAAgB,CAACE,MAAjB,CAAwB,CAACpB,GAAD,EAAMqB,KAAN,KAAgB;AAC3D,cAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SALoB,CAArB;AAMAf,QAAAA,kBAAkB,CAACa,kBAAD,CAAlB;AACD;AAZH,KAlBU;AAHO,GAArB;AAsCA,sBACE,QAAC,gBAAD;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,YAAY,EAAET,YADhB;AAEE,MAAA,OAAO,EAAEY,OAFX;AAGE,MAAA,UAAU,EAAEzB,IAHd;AAIE,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3DD;;AA6DA,eAAenB,SAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, Popconfirm, Button, message } from 'antd';\n\nconst DataTableWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  table {\n    width: 100%;\n  }\n`;\n\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: i,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\ninterface Props {}\n\nconst DataTable = ({}: Props): JSX.Element => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const handleDelete = () => {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  const onSelectChange = (selectedRowKeys: any) => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return (\n    <DataTableWrapper>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={data}\n        style={{ width: '100%' }}\n      />\n    </DataTableWrapper>\n  );\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}