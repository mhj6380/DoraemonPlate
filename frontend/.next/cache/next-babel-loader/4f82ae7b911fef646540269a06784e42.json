{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\nconst BoardWriteWrapper = styled.div.withConfig({\n  displayName: \"write__BoardWriteWrapper\",\n  componentId: \"sc-1x045vr-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n\nconst BoardWritePage = ({}) => {\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  // const editorToHtml = draftToHtml(\n  //   convertToRaw(editorState.getCurrentContent())\n  // );\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    children: /*#__PURE__*/_jsxDEV(BoardWriteWrapper, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            content: '',\n            tags: [{\n              tag_name: ''\n            }]\n          },\n          validate: values => {\n            // const errors: Record<string, string> = {};\n            if (values.title === '') {\n              alert('제목을 입력해주세요.');\n              return;\n            }\n          },\n          onSubmit: (data, {\n            setSubmitting\n          }) => {\n            setSubmitting(true);\n            setLoading(true);\n            console.log(data);\n            const editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n            axios.post(`${BACKEND_URL}/board`, {\n              title: data.title,\n              content: editorToHtml.toString(),\n              author: '어썰',\n              thumbnail: '',\n              tags: 'tag'\n            }).then(res => {\n              console.log(res.data);\n            });\n            setSubmitting(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BasicTextField, {\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditorField, {\n              val: editorState,\n              setVal: setEditorState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BasicSubmitBtn, {\n              text: \"\\uC791\\uC131\\uC644\\uB8CC\",\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardWritePage;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/board/write/index.tsx"],"names":["useState","styled","TransitionLayout","EditorField","draftToHtml","BasicTextField","EditorState","convertToRaw","Formik","Form","axios","BACKEND_URL","BasicSubmitBtn","BoardWriteWrapper","div","BoardWritePage","editorState","setEditorState","createEmpty","loading","setLoading","title","content","tags","tag_name","values","alert","data","setSubmitting","console","log","editorToHtml","getCurrentContent","post","toString","author","thumbnail","then","res","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport TransitionLayout from 'components/layout/TransitionLayout';\nimport EditorField from 'components/form/EditorField';\nimport draftToHtml from 'draftjs-to-html';\nimport BasicTextField from 'components/form/material/BasicTextField';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Formik, Form } from 'formik';\nimport axios from 'util/axios';\nimport { BACKEND_URL } from 'config';\nimport BasicSubmitBtn from 'components/tools/BasicSubmitBtn';\n\nconst BoardWriteWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props {}\n\nconst BoardWritePage = ({}: Props): JSX.Element => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = () => {\n  //   //   HTML화 된 값\n  // const editorToHtml = draftToHtml(\n  //   convertToRaw(editorState.getCurrentContent())\n  // );\n\n  //   console.log(editorToHtml.toString());\n  //   return;\n  // };\n\n  return (\n    <TransitionLayout>\n      <BoardWriteWrapper>\n        <>\n          <Formik\n            initialValues={{\n              title: '',\n              content: '',\n              tags: [\n                {\n                  tag_name: '',\n                },\n              ],\n            }}\n            validate={(values) => {\n              // const errors: Record<string, string> = {};\n\n              if (values.title === '') {\n                alert('제목을 입력해주세요.');\n                return;\n              }\n            }}\n            onSubmit={(data, { setSubmitting }) => {\n              setSubmitting(true);\n              setLoading(true);\n              console.log(data);\n              const editorToHtml = draftToHtml(\n                convertToRaw(editorState.getCurrentContent())\n              );\n              axios\n                .post(`${BACKEND_URL}/board`, {\n                  title: data.title,\n                  content: editorToHtml.toString(),\n                  author: '어썰',\n                  thumbnail: '',\n                  tags: 'tag',\n                })\n                .then((res: any) => {\n                  console.log(res.data);\n                });\n\n              setSubmitting(false);\n            }}\n          >\n            <Form style={{ width: '100%' }}>\n              <BasicTextField name=\"title\" />\n              <EditorField val={editorState} setVal={setEditorState} />\n\n              {/* 수정모드일때만  */}\n              {/* <EditorField\n          val={editorState}\n          setVal={setEditorState}\n          editMode={true}\n          currentVal=\"<p><b>HTML</b> 입니다!</p>\"\n        /> */}\n              <BasicSubmitBtn text=\"작성완료\" loading={loading} />\n            </Form>\n          </Formik>\n        </>\n      </BoardWriteWrapper>\n    </TransitionLayout>\n  );\n};\n\nexport default BoardWritePage;\n"]},"metadata":{},"sourceType":"module"}