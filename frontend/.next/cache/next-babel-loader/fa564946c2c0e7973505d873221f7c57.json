{"ast":null,"code":"import _slicedToArray from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback } from \"react\";\nimport Link from \"next/link\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport { BACKEND_URL } from '../../config';\nimport { useCookies } from \"react-cookie\";\nimport { Title, ViewWrapper, LoginFormWrapper, NoAccount, CheckboxWrapper, ForgotPassword, FieldWrapper, SubmitBtn } from './styled'; // import { useRouter } from 'next/router';\n\nvar LoginForm = function LoginForm() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _useCookies = useCookies([\"accessToken\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1]; // const Router = useRouter();\n\n\n  var handleSubmit = useCallback(function (e) {\n    e.preventDefault();\n    if (!email) return alert(\"이메일을 입력해 주세요.\");\n    if (!password) return alert(\"패스워드를 입력해 주세요.\");\n    axios.post(\"\".concat(BACKEND_URL, \"/auth/login\"), {\n      user_id: email,\n      password: password\n    }).then(function (res) {\n      if (res.status === 200) {\n        if (!res.data.accessToken || !res.data.refreshToken) return alert(\"토큰 발급 에러입니다!\");\n        console.log(cookies);\n        setCookie(\"accessToken\", res.data.accessToken, {\n          path: \"/\",\n          maxAge: 100000\n        });\n        setCookie(\"refreshToken\", res.data.refreshToken, {\n          path: \"/\",\n          maxAge: 700000\n        });\n        window.location.href = \"/\";\n        return;\n      }\n    })[\"catch\"](function (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        // console.log(error.response.data);\n        // console.log(error.response.status);\n        // console.log(error.response.headers);\n        return alert(error.response.data.message);\n      } else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        console.log(error.request);\n      } else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n      }\n\n      return alert(\"서버 에러\");\n    });\n  }, [email, password]); // 이미 로그인중이라면 메인으로 \n  // if (me) Router.push('/'); \n\n  return /*#__PURE__*/_jsx(ViewWrapper, {\n    children: /*#__PURE__*/_jsxs(LoginFormWrapper, {\n      children: [/*#__PURE__*/_jsx(Title, {\n        children: \"Login\"\n      }), /*#__PURE__*/_jsx(LoginTextField, {\n        label: \"username\",\n        type: \"text\",\n        val: email,\n        setVal: setEmail\n      }), /*#__PURE__*/_jsx(LoginTextField, {\n        label: \"password\",\n        type: \"password\",\n        val: password,\n        setVal: setPassword\n      }), /*#__PURE__*/_jsx(CheckboxWrapper, {\n        children: /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"longsession\",\n          children: [\"\\uB85C\\uADF8\\uC778 \\uC720\\uC9C0\", /*#__PURE__*/_jsx(\"input\", {\n            id: \"longsession\",\n            type: \"checkbox\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(SubmitBtn, {\n        onClick: handleSubmit,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }), /*#__PURE__*/_jsx(ForgotPassword, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/auth/find/password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"\n        })\n      }), /*#__PURE__*/_jsxs(NoAccount, {\n        children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsx(Link, {\n          href: \"/auth/register\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        })]\n      })]\n    })\n  });\n};\n\nvar LoginTextField = function LoginTextField(props) {\n  var label = props.label,\n      type = props.type,\n      val = props.val,\n      setVal = props.setVal;\n  return /*#__PURE__*/_jsx(FieldWrapper, {\n    children: /*#__PURE__*/_jsx(TextField, {\n      label: label,\n      fullWidth: true,\n      value: val,\n      type: type,\n      onChange: function onChange(e) {\n        setVal(e.target.value);\n      }\n    })\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/auth/login.tsx"],"names":["React","useCallback","Link","TextField","axios","BACKEND_URL","useCookies","Title","ViewWrapper","LoginFormWrapper","NoAccount","CheckboxWrapper","ForgotPassword","FieldWrapper","SubmitBtn","LoginForm","useState","email","setEmail","password","setPassword","cookies","setCookie","handleSubmit","e","preventDefault","alert","post","user_id","then","res","status","data","accessToken","refreshToken","console","log","path","maxAge","window","location","href","error","response","message","request","LoginTextField","props","label","type","val","setVal","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport Link from \"next/link\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport { BACKEND_URL } from '../../config'; \nimport { useCookies } from \"react-cookie\";\nimport { Title, ViewWrapper, LoginFormWrapper, NoAccount, CheckboxWrapper, ForgotPassword, FieldWrapper, SubmitBtn } from './styled';\n\n// import { useRouter } from 'next/router';\n\nconst LoginForm = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [cookies, setCookie] = useCookies([\"accessToken\"]);\n  \n  // const Router = useRouter();\n\n  const handleSubmit = useCallback((e: any) => {\n    e.preventDefault();\n\n    if (!email) return alert(\"이메일을 입력해 주세요.\");\n    if (!password) return alert(\"패스워드를 입력해 주세요.\");\n\n \n    axios.post(`${BACKEND_URL}/auth/login`, {\n      user_id: email,\n      password\n    }).then((res:any) => {\n      if (res.status === 200) {\n        if (!res.data.accessToken || !res.data.refreshToken) return alert(\"토큰 발급 에러입니다!\");\n        console.log(cookies); \n        setCookie(\"accessToken\", res.data.accessToken, {\n          path: \"/\",\n          maxAge: 100000,\n        });\n        setCookie(\"refreshToken\", res.data.refreshToken, { \n          path: \"/\",\n          maxAge: 700000,\n        }); \n        window.location.href = \"/\"; \n        return;\n      }\n    }).catch(function (error) { \n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        // console.log(error.response.data);\n        // console.log(error.response.status);\n        // console.log(error.response.headers);\n        return alert(error.response.data.message);\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        console.log(error.request); \n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n      }\n      return alert(\"서버 에러\");\n    });\n  },[email,password])\n\n\n  // 이미 로그인중이라면 메인으로 \n  // if (me) Router.push('/'); \n\n  return (\n    <ViewWrapper> \n      <LoginFormWrapper>\n        <Title>Login</Title>\n        <LoginTextField\n          label=\"username\"\n          type=\"text\"\n          val={email}\n          setVal={setEmail}\n        />\n        <LoginTextField\n          label=\"password\"\n          type=\"password\"\n          val={password}\n          setVal={setPassword}\n        />\n        <CheckboxWrapper>\n          <label htmlFor=\"longsession\">\n            로그인 유지\n             \n            <input id=\"longsession\" type=\"checkbox\" />\n          </label>\n        </CheckboxWrapper>\n        <SubmitBtn onClick={handleSubmit}>로그인</SubmitBtn>\n        <ForgotPassword>\n          <Link href=\"/auth/find/password\">비밀번호를 잊으셨나요?</Link>\n        </ForgotPassword>\n        <NoAccount>\n          계정이 없으신가요? <Link href=\"/auth/register\">회원가입</Link>\n        </NoAccount>\n      </LoginFormWrapper>\n    </ViewWrapper>\n  );\n};\n\n\n\n\n\nconst LoginTextField = (props) => {\n  const { label, type, val, setVal } = props;\n  return (\n    <FieldWrapper>\n      <TextField\n        label={label}\n        fullWidth\n        value={val}\n        type={type}\n        onChange={(e) => {\n          setVal(e.target.value);\n        }}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}