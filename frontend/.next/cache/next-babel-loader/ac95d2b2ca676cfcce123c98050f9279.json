{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, Popconfirm, Button, message } from 'antd';\nvar DataTableWrapper = styled.div.withConfig({\n  displayName: \"DataTable__DataTableWrapper\",\n  componentId: \"sc-14fb33p-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;table{width:100%;}\"]);\n_c = DataTableWrapper;\nvar data = [];\n\nfor (var i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: \"Edward King \".concat(i),\n    age: i,\n    address: \"London, Park Lane no. \".concat(i)\n  });\n}\n\nvar DataTable = function DataTable(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      selectedRowKeys = _useState[0],\n      setSelectedRowKeys = _useState[1];\n\n  var columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: function sorter(a, b) {\n      return a.name - b.name;\n    }\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: function sorter(a, b) {\n      return a.age - b.age;\n    }\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    sorter: function sorter(a, b) {\n      return a.address - b.address;\n    }\n  }, {\n    title: 'Action',\n    dataIndex: '',\n    key: 'x',\n    render: function render() {\n      return /*#__PURE__*/_jsxDEV(Popconfirm, {\n        placement: \"topRight\",\n        title: \"\\uC815\\uB9D0 \\uC0AD\\uC81C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n        onConfirm: handleDelete,\n        okText: \"\\uC608\",\n        cancelText: \"\\uC544\\uB2C8\\uC624\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this);\n    }\n  }];\n\n  var handleDelete = function handleDelete() {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  var onSelectChange = function onSelectChange(selectedRowKeys) {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  var rowSelection = {\n    selectedRowKeys: selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: function onSelect(changableRowKeys) {\n        var newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: function onSelect(changableRowKeys) {\n        var newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(DataTableWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DataTable, \"AGfOs+7sjQarz8vBaL7lsXNTa7o=\");\n\n_c2 = DataTable;\nexport default DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataTableWrapper\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx"],"names":["useState","styled","Table","Popconfirm","Button","message","DataTableWrapper","div","data","i","push","key","name","age","address","DataTable","selectedRowKeys","setSelectedRowKeys","columns","title","dataIndex","sorter","a","b","render","handleDelete","info","onSelectChange","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, Popconfirm, Button, message } from 'antd';\n\nconst DataTableWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  table {\n    width: 100%;\n  }\n`;\n\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: i,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\ninterface Props {}\n\nconst DataTable = ({}: Props): JSX.Element => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      sorter: (a: any, b: any) => a.name - b.name,\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a: any, b: any) => a.age - b.age,\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      sorter: (a: any, b: any) => a.address - b.address,\n    },\n    {\n      title: 'Action',\n      dataIndex: '',\n      key: 'x',\n      render: () => (\n        <Popconfirm\n          placement=\"topRight\"\n          title=\"정말 삭제 하시겠습니까?\"\n          onConfirm={handleDelete}\n          okText=\"예\"\n          cancelText=\"아니오\"\n        >\n          <Button type=\"primary\">삭제</Button>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  const handleDelete = () => {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  const onSelectChange = (selectedRowKeys: any) => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return (\n    <DataTableWrapper>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={data}\n        style={{ width: '100%' }}\n      />\n    </DataTableWrapper>\n  );\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}