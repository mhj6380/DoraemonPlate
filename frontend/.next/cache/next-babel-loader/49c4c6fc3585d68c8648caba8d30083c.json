{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/munhagju/DoraemonPlateV1/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\";\nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm';\nimport { useChatState } from 'lib/providers/chatProvider';\nimport { useAuthState } from 'lib/providers/authProvider';\nvar DirectMessageWrapper = styled.div.withConfig({\n  displayName: \"partner_id__DirectMessageWrapper\",\n  componentId: \"sc-4pw1eg-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;\"]);\n_c = DirectMessageWrapper;\n\nvar DirectMessage = function DirectMessage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var partner_id = router.query.partner_id;\n  var dispatch = useChatDispatch();\n  var chat = useChatState();\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var me = useAuthState();\n  var usersArr = [me.userInfo.user_id, partner_id];\n  useEffect(function () {\n    if (!partner_id) return;\n    console.log(\"ROOM\", usersArr.sort());\n    dispatch({\n      type: \"JOIN_ROOM\",\n      payload: partner_id.toString()\n    });\n  }, []);\n\n  var handleSendMessage = function handleSendMessage(e) {\n    e.preventDefault();\n    var payload = {\n      id: 3,\n      room_key: partner_id.toString(),\n      nickname: \"학구\",\n      profile: \"profile2\",\n      datetime: 'datetime2',\n      message: message,\n      msgType: 'image2',\n      source: 'source2'\n    };\n    dispatch({\n      type: \"SEND_MESSAGE\",\n      payload: payload\n    });\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionLayout, {\n    title: \"\\uCC44\\uD305\",\n    requiredLogin: true,\n    children: /*#__PURE__*/_jsxDEV(DirectMessageWrapper, {\n      children: [\"partner_id : \", partner_id, JSON.stringify(me.userInfo.user_id), /*#__PURE__*/_jsxDEV(ChatList, {\n        datas: chat.chatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DirectMessage, \"4N8ojs/rCu/hJfTlfTs6UP7QXY0=\", false, function () {\n  return [useRouter, useChatDispatch, useChatState, useAuthState];\n});\n\n_c2 = DirectMessage;\nexport default DirectMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectMessageWrapper\");\n$RefreshReg$(_c2, \"DirectMessage\");","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/dm/[partner_id].tsx"],"names":["React","useEffect","useState","TransitionLayout","useRouter","styled","useChatDispatch","ChatList","ChatForm","useChatState","useAuthState","DirectMessageWrapper","div","DirectMessage","router","partner_id","query","dispatch","chat","message","setMessage","me","usersArr","userInfo","user_id","console","log","sort","type","payload","toString","handleSendMessage","e","preventDefault","id","room_key","nickname","profile","datetime","msgType","source","JSON","stringify","chatList"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport TransitionLayout from \"components/layout/TransitionLayout\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useChatDispatch } from \"lib/providers/chatProvider\"; \nimport ChatList from 'components/chat/ChatList';\nimport ChatForm from 'components/chat/ChatForm'; \nimport { useChatState } from 'lib/providers/chatProvider';\nimport { TChatMessage } from 'types/chat';\nimport { useAuthState } from 'lib/providers/authProvider';\n\nconst DirectMessageWrapper = styled.div`\n  width:100%;\n  height:100%; \n  display:flex;\n  flex-flow: row wrap;\n`;\n\ninterface Props { \n\n}\n\nconst DirectMessage = ({  }:Props):JSX.Element=> {\n  const router = useRouter()\n  const { partner_id } = router.query; \n  const dispatch = useChatDispatch();\n  const chat = useChatState();\n  const [message, setMessage] = useState('');\n  const me = useAuthState();\n\n  const usersArr = [me.userInfo.user_id, partner_id];\n\n  useEffect(() => {\n    if (!partner_id) return;\n\n    console.log(\"ROOM\", usersArr.sort());\n    dispatch({type:\"JOIN_ROOM\", payload:partner_id.toString()})  \n  }, []);\n\n  const handleSendMessage = (e:any):void => {\n    e.preventDefault();\n   \n    const payload: TChatMessage = {\n      id: 3,\n      room_key: partner_id.toString(), \n      nickname: \"학구\", \n      profile: \"profile2\", \n      datetime: 'datetime2',\n      message,  \n      msgType: 'image2',\n      source: 'source2'\n      } \n\n      dispatch({type:\"SEND_MESSAGE\", payload})   \n    \n    setMessage(''); \n  }\n\n  return (\n    <TransitionLayout title=\"채팅\" requiredLogin={true}>  \n    <DirectMessageWrapper>\n        partner_id : {partner_id}  \n        { JSON.stringify(me.userInfo.user_id)}\n        <ChatList datas={chat.chatList}/> \n        <ChatForm message={message} setMessage={setMessage} handleSendMessage={handleSendMessage}/>\n     </DirectMessageWrapper>\n   </TransitionLayout> \n  )\n\n} \n\nexport default DirectMessage;"]},"metadata":{},"sourceType":"module"}