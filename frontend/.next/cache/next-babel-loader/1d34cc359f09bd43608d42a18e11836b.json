{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\n// posts will be populated at build time by getStaticProps()\nfunction Blog(_ref) {\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: posts.map(function (post) {\n      return /*#__PURE__*/_jsx(\"li\", {\n        children: post.title\n      });\n    })\n  });\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport var __N_SSG = true;\nexport default Blog;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/pages/test.tsx"],"names":["Blog","posts","map","post","title"],"mappings":";;AAAA;AACA,SAASA,IAAT,OAAyB;AAAA,MAATC,KAAS,QAATA,KAAS;AACvB,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAA,kBAAKA,IAAI,CAACC;AAAV,QADS;AAAA,KAAV;AADH,IADF;AAOD,C,CAED;AACA;AACA;;;;AAgBA,eAAeJ,IAAf","sourcesContent":["// posts will be populated at build time by getStaticProps()\nfunction Blog({ posts }) {\n  return (\n    <ul>\n      {posts.map((post) => (\n        <li>{post.title}</li>\n      ))}\n    </ul>\n  ) \n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  // const res = await fetch('https://.../posts')\n  // const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts: [{title:\"tlqkfk\"}],  \n    },\n  }\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}