{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, Popconfirm, Button, message } from 'antd';\nconst DataTableWrapper = styled.div.withConfig({\n  displayName: \"DataTable__DataTableWrapper\",\n  componentId: \"sc-14fb33p-0\"\n})([\"width:100%;height:100%;display:flex;flex-flow:row wrap;table{width:100%;}\"]);\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: (a, b) => a.name - b.name\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  sorter: (a, b) => a.address - b.address\n}, {\n  title: 'Action',\n  dataIndex: '',\n  key: 'x',\n  render: () => /*#__PURE__*/_jsxDEV(Popconfirm, {\n    placement: \"topRight\",\n    title: \"\\uC0AD\\uC81C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n    onConfirm: confirm,\n    okText: \"\\uC608\",\n    cancelText: \"\\uC544\\uB2C8\\uC624\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"TR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this)\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: i,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nconst DataTable = ({}) => {\n  const {\n    0: selectedRowKeys,\n    1: setSelectedRowKeys\n  } = useState([]);\n\n  const confirm = () => {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  const onSelectChange = selectedRowKeys => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(DataTableWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/munhagju/DoraemonPlateV1/frontend/components/adm/DataTable.tsx"],"names":["useState","styled","Table","Popconfirm","Button","message","DataTableWrapper","div","columns","title","dataIndex","sorter","a","b","name","age","address","key","render","confirm","data","i","push","DataTable","selectedRowKeys","setSelectedRowKeys","info","onSelectChange","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Table, Popconfirm, Button, message } from 'antd';\n\nconst DataTableWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  table {\n    width: 100%;\n  }\n`;\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: (a: any, b: any) => a.name - b.name,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a: any, b: any) => a.age - b.age,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    sorter: (a: any, b: any) => a.address - b.address,\n  },\n  {\n    title: 'Action',\n    dataIndex: '',\n    key: 'x',\n    render: () => (\n      <Popconfirm\n        placement=\"topRight\"\n        title=\"삭제 하시겠습니까?\"\n        onConfirm={confirm}\n        okText=\"예\"\n        cancelText=\"아니오\"\n      >\n        <Button>TR</Button>\n      </Popconfirm>\n    ),\n  },\n];\n\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: i,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\ninterface Props {}\n\nconst DataTable = ({}: Props): JSX.Element => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const confirm = () => {\n    message.info('삭제가 완료되었습니다.');\n  };\n\n  const onSelectChange = (selectedRowKeys: any) => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: (changableRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  return (\n    <DataTableWrapper>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={data}\n        style={{ width: '100%' }}\n      />\n    </DataTableWrapper>\n  );\n};\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}